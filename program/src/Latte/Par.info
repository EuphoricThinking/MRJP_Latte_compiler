-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Latte/Par.y
-----------------------------------------------------------------------------

state 31 contains 1 shift/reduce conflicts.
state 57 contains 1 shift/reduce conflicts.
state 110 contains 1 shift/reduce conflicts.
state 128 contains 1 shift/reduce conflicts.
state 147 contains 1 shift/reduce conflicts.

rule 38 is unused
rule 45 is unused
rule 46 is unused
rule 47 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident Block                      (6)
	TopDef -> 'class' Ident 'extends' Ident Block      (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	Block -> '{' ListStmt '}'                          (14)
	ListStmt ->                                        (15)
	ListStmt -> Stmt ListStmt                          (16)
	Stmt -> ';'                                        (17)
	Stmt -> Block                                      (18)
	Stmt -> Type ListItem ';'                          (19)
	Stmt -> Ident '=' Expr ';'                         (20)
	Stmt -> Ident '[' Expr ']' '=' Expr ';'            (21)
	Stmt -> Expr6 '.' Ident '=' Expr                   (22)
	Stmt -> Ident '++' ';'                             (23)
	Stmt -> Expr6 '.' Ident '++' ';'                   (24)
	Stmt -> Expr6 '.' Ident '--' ';'                   (25)
	Stmt -> Ident '--' ';'                             (26)
	Stmt -> 'return' Expr ';'                          (27)
	Stmt -> 'return' ';'                               (28)
	Stmt -> 'if' '(' Expr ')' Stmt                     (29)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (30)
	Stmt -> 'while' '(' Expr ')' Stmt                  (31)
	Stmt -> 'for' '(' Type Ident ':' Ident ')' Stmt    (32)
	Stmt -> Expr ';'                                   (33)
	Item -> Ident                                      (34)
	Item -> Ident '=' Expr                             (35)
	ListItem -> Item                                   (36)
	ListItem -> Item ',' ListItem                      (37)
	Construct -> Ident '.'                             (38)
	Type -> 'int'                                      (39)
	Type -> 'string'                                   (40)
	Type -> 'boolean'                                  (41)
	Type -> 'void'                                     (42)
	Type -> Type '[]'                                  (43)
	Type -> Ident                                      (44)
	ListType ->                                        (45)
	ListType -> Type                                   (46)
	ListType -> Type ',' ListType                      (47)
	Expr6 -> Ident                                     (48)
	Expr6 -> Ident '[' Expr ']'                        (49)
	Expr6 -> Integer                                   (50)
	Expr6 -> 'true'                                    (51)
	Expr6 -> 'false'                                   (52)
	Expr6 -> Ident '(' ListExpr ')'                    (53)
	Expr6 -> Expr6 '.' Ident '(' ListExpr ')'          (54)
	Expr6 -> Expr6 '.' Ident                           (55)
	Expr6 -> '(' Type ')null'                          (56)
	Expr6 -> 'new' Type                                (57)
	Expr6 -> 'new' Type '[' Integer ']'                (58)
	Expr6 -> String                                    (59)
	Expr6 -> '(' Expr ')'                              (60)
	Expr5 -> '-' Expr6                                 (61)
	Expr5 -> '!' Expr6                                 (62)
	Expr5 -> Expr6                                     (63)
	Expr4 -> Expr4 MulOp Expr5                         (64)
	Expr4 -> Expr5                                     (65)
	Expr3 -> Expr3 AddOp Expr4                         (66)
	Expr3 -> Expr4                                     (67)
	Expr2 -> Expr2 RelOp Expr3                         (68)
	Expr2 -> Expr3                                     (69)
	Expr1 -> Expr2 '&&' Expr1                          (70)
	Expr1 -> Expr2                                     (71)
	Expr -> Expr1 '||' Expr                            (72)
	Expr -> Expr1                                      (73)
	ListExpr ->                                        (74)
	ListExpr -> Expr                                   (75)
	ListExpr -> Expr ',' ListExpr                      (76)
	AddOp -> '+'                                       (77)
	AddOp -> '-'                                       (78)
	MulOp -> '*'                                       (79)
	MulOp -> '/'                                       (80)
	MulOp -> '%'                                       (81)
	RelOp -> '<'                                       (82)
	RelOp -> '<='                                      (83)
	RelOp -> '>'                                       (84)
	RelOp -> '>='                                      (85)
	RelOp -> '=='                                      (86)
	RelOp -> '!='                                      (87)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	':'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<='           { PT _ (TS _ 19) }
	'='            { PT _ (TS _ 20) }
	'=='           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	'[]'           { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'boolean'      { PT _ (TS _ 27) }
	'class'        { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'extends'      { PT _ (TS _ 30) }
	'false'        { PT _ (TS _ 31) }
	'for'          { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'int'          { PT _ (TS _ 34) }
	'new'          { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	Block           rule  14
	ListStmt        rules 15, 16
	Stmt            rules 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33
	Item            rules 34, 35
	ListItem        rules 36, 37
	Construct       rule  38
	Type            rules 39, 40, 41, 42, 43, 44
	ListType        rules 45, 46, 47
	Expr6           rules 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60
	Expr5           rules 61, 62, 63
	Expr4           rules 64, 65
	Expr3           rules 66, 67
	Expr2           rules 68, 69
	Expr1           rules 70, 71
	Expr            rules 72, 73
	ListExpr        rules 74, 75, 76
	AddOp           rules 77, 78
	MulOp           rules 79, 80, 81
	RelOp           rules 82, 83, 84, 85, 86, 87

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!'            reduce using rule 1
	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'boolean'      reduce using rule 1
	'else'         reduce using rule 1
	'extends'      reduce using rule 1
	'false'        reduce using rule 1
	'for'          reduce using rule 1
	'if'           reduce using rule 1
	'int'          reduce using rule 1
	'new'          reduce using rule 1
	'return'       reduce using rule 1
	'string'       reduce using rule 1
	'true'         reduce using rule 1
	'void'         reduce using rule 1
	'while'        reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_quoted       reduce using rule 1


State 3

	Type -> Ident .                                     (rule 44)

	'!'            reduce using rule 44
	'!='           reduce using rule 44
	'%'            reduce using rule 44
	'&&'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	'*'            reduce using rule 44
	'+'            reduce using rule 44
	','            reduce using rule 44
	'-'            reduce using rule 44
	'.'            reduce using rule 44
	'/'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'['            reduce using rule 44
	'[]'           reduce using rule 44
	']'            reduce using rule 44
	'boolean'      reduce using rule 44
	'else'         reduce using rule 44
	'false'        reduce using rule 44
	'for'          reduce using rule 44
	'if'           reduce using rule 44
	'int'          reduce using rule 44
	'new'          reduce using rule 44
	'return'       reduce using rule 44
	'string'       reduce using rule 44
	'true'         reduce using rule 44
	'void'         reduce using rule 44
	'while'        reduce using rule 44
	'{'            reduce using rule 44
	'||'           reduce using rule 44
	'}'            reduce using rule 44
	L_Ident        reduce using rule 44
	L_integ        reduce using rule 44
	L_quoted       reduce using rule 44


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 8

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 16
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 41)

	'!'            reduce using rule 41
	'!='           reduce using rule 41
	'%'            reduce using rule 41
	'&&'           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	')null'        reduce using rule 41
	'*'            reduce using rule 41
	'+'            reduce using rule 41
	','            reduce using rule 41
	'-'            reduce using rule 41
	'.'            reduce using rule 41
	'/'            reduce using rule 41
	';'            reduce using rule 41
	'<'            reduce using rule 41
	'<='           reduce using rule 41
	'=='           reduce using rule 41
	'>'            reduce using rule 41
	'>='           reduce using rule 41
	'['            reduce using rule 41
	'[]'           reduce using rule 41
	']'            reduce using rule 41
	'boolean'      reduce using rule 41
	'else'         reduce using rule 41
	'false'        reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'int'          reduce using rule 41
	'new'          reduce using rule 41
	'return'       reduce using rule 41
	'string'       reduce using rule 41
	'true'         reduce using rule 41
	'void'         reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'||'           reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41


State 9

	TopDef -> 'class' . Ident Block                     (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident Block     (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 39)

	'!'            reduce using rule 39
	'!='           reduce using rule 39
	'%'            reduce using rule 39
	'&&'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	')null'        reduce using rule 39
	'*'            reduce using rule 39
	'+'            reduce using rule 39
	','            reduce using rule 39
	'-'            reduce using rule 39
	'.'            reduce using rule 39
	'/'            reduce using rule 39
	';'            reduce using rule 39
	'<'            reduce using rule 39
	'<='           reduce using rule 39
	'=='           reduce using rule 39
	'>'            reduce using rule 39
	'>='           reduce using rule 39
	'['            reduce using rule 39
	'[]'           reduce using rule 39
	']'            reduce using rule 39
	'boolean'      reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'new'          reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'||'           reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 11

	Type -> 'string' .                                  (rule 40)

	'!'            reduce using rule 40
	'!='           reduce using rule 40
	'%'            reduce using rule 40
	'&&'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	')null'        reduce using rule 40
	'*'            reduce using rule 40
	'+'            reduce using rule 40
	','            reduce using rule 40
	'-'            reduce using rule 40
	'.'            reduce using rule 40
	'/'            reduce using rule 40
	';'            reduce using rule 40
	'<'            reduce using rule 40
	'<='           reduce using rule 40
	'=='           reduce using rule 40
	'>'            reduce using rule 40
	'>='           reduce using rule 40
	'['            reduce using rule 40
	'[]'           reduce using rule 40
	']'            reduce using rule 40
	'boolean'      reduce using rule 40
	'else'         reduce using rule 40
	'false'        reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'new'          reduce using rule 40
	'return'       reduce using rule 40
	'string'       reduce using rule 40
	'true'         reduce using rule 40
	'void'         reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'||'           reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


State 12

	Type -> 'void' .                                    (rule 42)

	'!'            reduce using rule 42
	'!='           reduce using rule 42
	'%'            reduce using rule 42
	'&&'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	')null'        reduce using rule 42
	'*'            reduce using rule 42
	'+'            reduce using rule 42
	','            reduce using rule 42
	'-'            reduce using rule 42
	'.'            reduce using rule 42
	'/'            reduce using rule 42
	';'            reduce using rule 42
	'<'            reduce using rule 42
	'<='           reduce using rule 42
	'=='           reduce using rule 42
	'>'            reduce using rule 42
	'>='           reduce using rule 42
	'['            reduce using rule 42
	'[]'           reduce using rule 42
	']'            reduce using rule 42
	'boolean'      reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'for'          reduce using rule 42
	'if'           reduce using rule 42
	'int'          reduce using rule 42
	'new'          reduce using rule 42
	'return'       reduce using rule 42
	'string'       reduce using rule 42
	'true'         reduce using rule 42
	'void'         reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'||'           reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42


State 13

	TopDef -> 'class' Ident . Block                     (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident Block     (rule 7)

	'extends'      shift, and enter state 19
	'{'            shift, and enter state 20

	Block          goto state 18

State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 17


State 15

	Type -> Type '[]' .                                 (rule 43)

	'!'            reduce using rule 43
	'!='           reduce using rule 43
	'%'            reduce using rule 43
	'&&'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	')null'        reduce using rule 43
	'*'            reduce using rule 43
	'+'            reduce using rule 43
	','            reduce using rule 43
	'-'            reduce using rule 43
	'.'            reduce using rule 43
	'/'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'['            reduce using rule 43
	'[]'           reduce using rule 43
	']'            reduce using rule 43
	'boolean'      reduce using rule 43
	'else'         reduce using rule 43
	'false'        reduce using rule 43
	'for'          reduce using rule 43
	'if'           reduce using rule 43
	'int'          reduce using rule 43
	'new'          reduce using rule 43
	'return'       reduce using rule 43
	'string'       reduce using rule 43
	'true'         reduce using rule 43
	'void'         reduce using rule 43
	'while'        reduce using rule 43
	'{'            reduce using rule 43
	'||'           reduce using rule 43
	'}'            reduce using rule 43
	L_Ident        reduce using rule 43
	L_integ        reduce using rule 43
	L_quoted       reduce using rule 43


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 17

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 49
	ListArg        goto state 50
	Type           goto state 51

State 18

	TopDef -> 'class' Ident Block .                     (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 19

	TopDef -> 'class' Ident 'extends' . Ident Block     (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 48

State 20

	Block -> '{' . ListStmt '}'                         (rule 14)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 38
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 39
	'for'          shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 10
	'new'          shift, and enter state 42
	'return'       shift, and enter state 43
	'string'       shift, and enter state 11
	'true'         shift, and enter state 44
	'void'         shift, and enter state 12
	'while'        shift, and enter state 45
	'{'            shift, and enter state 20
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Block          goto state 24
	ListStmt       goto state 25
	Stmt           goto state 26
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34

State 21

	Stmt -> Ident . '=' Expr ';'                        (rule 20)
	Stmt -> Ident . '[' Expr ']' '=' Expr ';'           (rule 21)
	Stmt -> Ident . '++' ';'                            (rule 23)
	Stmt -> Ident . '--' ';'                            (rule 26)
	Type -> Ident .                                     (rule 44)
	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '[' Expr ']'                       (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 92
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'++'           shift, and enter state 93
	'-'            reduce using rule 48
	'--'           shift, and enter state 94
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'='            shift, and enter state 95
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            shift, and enter state 96
	'[]'           reduce using rule 44
	'||'           reduce using rule 48
	L_Ident        reduce using rule 44


State 22

	Expr6 -> Integer .                                  (rule 50)

	'!'            reduce using rule 50
	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	']'            reduce using rule 50
	'boolean'      reduce using rule 50
	'else'         reduce using rule 50
	'false'        reduce using rule 50
	'for'          reduce using rule 50
	'if'           reduce using rule 50
	'int'          reduce using rule 50
	'new'          reduce using rule 50
	'return'       reduce using rule 50
	'string'       reduce using rule 50
	'true'         reduce using rule 50
	'void'         reduce using rule 50
	'while'        reduce using rule 50
	'{'            reduce using rule 50
	'||'           reduce using rule 50
	'}'            reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 23

	Expr6 -> String .                                   (rule 59)

	'!'            reduce using rule 59
	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	']'            reduce using rule 59
	'boolean'      reduce using rule 59
	'else'         reduce using rule 59
	'false'        reduce using rule 59
	'for'          reduce using rule 59
	'if'           reduce using rule 59
	'int'          reduce using rule 59
	'new'          reduce using rule 59
	'return'       reduce using rule 59
	'string'       reduce using rule 59
	'true'         reduce using rule 59
	'void'         reduce using rule 59
	'while'        reduce using rule 59
	'{'            reduce using rule 59
	'||'           reduce using rule 59
	'}'            reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 24

	Stmt -> Block .                                     (rule 18)

	'!'            reduce using rule 18
	'('            reduce using rule 18
	'-'            reduce using rule 18
	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'else'         reduce using rule 18
	'false'        reduce using rule 18
	'for'          reduce using rule 18
	'if'           reduce using rule 18
	'int'          reduce using rule 18
	'new'          reduce using rule 18
	'return'       reduce using rule 18
	'string'       reduce using rule 18
	'true'         reduce using rule 18
	'void'         reduce using rule 18
	'while'        reduce using rule 18
	'{'            reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18
	L_integ        reduce using rule 18
	L_quoted       reduce using rule 18


State 25

	Block -> '{' ListStmt . '}'                         (rule 14)

	'}'            shift, and enter state 91


State 26

	ListStmt -> Stmt . ListStmt                         (rule 16)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 38
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 39
	'for'          shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 10
	'new'          shift, and enter state 42
	'return'       shift, and enter state 43
	'string'       shift, and enter state 11
	'true'         shift, and enter state 44
	'void'         shift, and enter state 12
	'while'        shift, and enter state 45
	'{'            shift, and enter state 20
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Block          goto state 24
	ListStmt       goto state 90
	Stmt           goto state 26
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34

State 27

	Stmt -> Type . ListItem ';'                         (rule 19)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 87
	Item           goto state 88
	ListItem       goto state 89

State 28

	Stmt -> Expr6 . '.' Ident '=' Expr                  (rule 22)
	Stmt -> Expr6 . '.' Ident '++' ';'                  (rule 24)
	Stmt -> Expr6 . '.' Ident '--' ';'                  (rule 25)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '.' Ident                          (rule 55)
	Expr5 -> Expr6 .                                    (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'-'            reduce using rule 63
	'.'            shift, and enter state 86
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'||'           reduce using rule 63


State 29

	Expr4 -> Expr5 .                                    (rule 65)

	'!'            reduce using rule 65
	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	']'            reduce using rule 65
	'boolean'      reduce using rule 65
	'else'         reduce using rule 65
	'false'        reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'int'          reduce using rule 65
	'new'          reduce using rule 65
	'return'       reduce using rule 65
	'string'       reduce using rule 65
	'true'         reduce using rule 65
	'void'         reduce using rule 65
	'while'        reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65
	'}'            reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 30

	Expr4 -> Expr4 . MulOp Expr5                        (rule 64)
	Expr3 -> Expr4 .                                    (rule 67)

	'!'            reduce using rule 67
	'!='           reduce using rule 67
	'%'            shift, and enter state 83
	'&&'           reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            shift, and enter state 84
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'/'            shift, and enter state 85
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	']'            reduce using rule 67
	'boolean'      reduce using rule 67
	'else'         reduce using rule 67
	'false'        reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'int'          reduce using rule 67
	'new'          reduce using rule 67
	'return'       reduce using rule 67
	'string'       reduce using rule 67
	'true'         reduce using rule 67
	'void'         reduce using rule 67
	'while'        reduce using rule 67
	'{'            reduce using rule 67
	'||'           reduce using rule 67
	'}'            reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67

	MulOp          goto state 82

State 31

	Expr3 -> Expr3 . AddOp Expr4                        (rule 66)
	Expr2 -> Expr3 .                                    (rule 69)

	'!'            reduce using rule 69
	'!='           reduce using rule 69
	'&&'           reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'+'            shift, and enter state 80
	','            reduce using rule 69
	'-'            shift, and enter state 81
			(reduce using rule 69)

	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	']'            reduce using rule 69
	'boolean'      reduce using rule 69
	'else'         reduce using rule 69
	'false'        reduce using rule 69
	'for'          reduce using rule 69
	'if'           reduce using rule 69
	'int'          reduce using rule 69
	'new'          reduce using rule 69
	'return'       reduce using rule 69
	'string'       reduce using rule 69
	'true'         reduce using rule 69
	'void'         reduce using rule 69
	'while'        reduce using rule 69
	'{'            reduce using rule 69
	'||'           reduce using rule 69
	'}'            reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69

	AddOp          goto state 79

State 32

	Expr2 -> Expr2 . RelOp Expr3                        (rule 68)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 70)
	Expr1 -> Expr2 .                                    (rule 71)

	'!'            reduce using rule 71
	'!='           shift, and enter state 72
	'&&'           shift, and enter state 73
	'('            reduce using rule 71
	')'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	';'            reduce using rule 71
	'<'            shift, and enter state 74
	'<='           shift, and enter state 75
	'=='           shift, and enter state 76
	'>'            shift, and enter state 77
	'>='           shift, and enter state 78
	']'            reduce using rule 71
	'boolean'      reduce using rule 71
	'else'         reduce using rule 71
	'false'        reduce using rule 71
	'for'          reduce using rule 71
	'if'           reduce using rule 71
	'int'          reduce using rule 71
	'new'          reduce using rule 71
	'return'       reduce using rule 71
	'string'       reduce using rule 71
	'true'         reduce using rule 71
	'void'         reduce using rule 71
	'while'        reduce using rule 71
	'{'            reduce using rule 71
	'||'           reduce using rule 71
	'}'            reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71

	RelOp          goto state 71

State 33

	Expr -> Expr1 . '||' Expr                           (rule 72)
	Expr -> Expr1 .                                     (rule 73)

	'!'            reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	';'            reduce using rule 73
	']'            reduce using rule 73
	'boolean'      reduce using rule 73
	'else'         reduce using rule 73
	'false'        reduce using rule 73
	'for'          reduce using rule 73
	'if'           reduce using rule 73
	'int'          reduce using rule 73
	'new'          reduce using rule 73
	'return'       reduce using rule 73
	'string'       reduce using rule 73
	'true'         reduce using rule 73
	'void'         reduce using rule 73
	'while'        reduce using rule 73
	'{'            reduce using rule 73
	'||'           shift, and enter state 70
	'}'            reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 34

	Stmt -> Expr . ';'                                  (rule 33)

	';'            shift, and enter state 69


State 35

	Expr5 -> '!' . Expr6                                (rule 62)

	'('            shift, and enter state 36
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 68

State 36

	Expr6 -> '(' . Type ')null'                         (rule 56)
	Expr6 -> '(' . Expr ')'                             (rule 60)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 39
	'int'          shift, and enter state 10
	'new'          shift, and enter state 42
	'string'       shift, and enter state 11
	'true'         shift, and enter state 44
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 65
	Integer        goto state 22
	String         goto state 23
	Type           goto state 66
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 67

State 37

	Expr5 -> '-' . Expr6                                (rule 61)

	'('            shift, and enter state 36
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 64

State 38

	Stmt -> ';' .                                       (rule 17)

	'!'            reduce using rule 17
	'('            reduce using rule 17
	'-'            reduce using rule 17
	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'else'         reduce using rule 17
	'false'        reduce using rule 17
	'for'          reduce using rule 17
	'if'           reduce using rule 17
	'int'          reduce using rule 17
	'new'          reduce using rule 17
	'return'       reduce using rule 17
	'string'       reduce using rule 17
	'true'         reduce using rule 17
	'void'         reduce using rule 17
	'while'        reduce using rule 17
	'{'            reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17
	L_integ        reduce using rule 17
	L_quoted       reduce using rule 17


State 39

	Expr6 -> 'false' .                                  (rule 52)

	'!'            reduce using rule 52
	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	']'            reduce using rule 52
	'boolean'      reduce using rule 52
	'else'         reduce using rule 52
	'false'        reduce using rule 52
	'for'          reduce using rule 52
	'if'           reduce using rule 52
	'int'          reduce using rule 52
	'new'          reduce using rule 52
	'return'       reduce using rule 52
	'string'       reduce using rule 52
	'true'         reduce using rule 52
	'void'         reduce using rule 52
	'while'        reduce using rule 52
	'{'            reduce using rule 52
	'||'           reduce using rule 52
	'}'            reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 40

	Stmt -> 'for' . '(' Type Ident ':' Ident ')' Stmt    (rule 32)

	'('            shift, and enter state 63


State 41

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 30)

	'('            shift, and enter state 62


State 42

	Expr6 -> 'new' . Type                               (rule 57)
	Expr6 -> 'new' . Type '[' Integer ']'               (rule 58)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 61

State 43

	Stmt -> 'return' . Expr ';'                         (rule 27)
	Stmt -> 'return' . ';'                              (rule 28)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 60
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 59

State 44

	Expr6 -> 'true' .                                   (rule 51)

	'!'            reduce using rule 51
	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	']'            reduce using rule 51
	'boolean'      reduce using rule 51
	'else'         reduce using rule 51
	'false'        reduce using rule 51
	'for'          reduce using rule 51
	'if'           reduce using rule 51
	'int'          reduce using rule 51
	'new'          reduce using rule 51
	'return'       reduce using rule 51
	'string'       reduce using rule 51
	'true'         reduce using rule 51
	'void'         reduce using rule 51
	'while'        reduce using rule 51
	'{'            reduce using rule 51
	'||'           reduce using rule 51
	'}'            reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 45

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 31)

	'('            shift, and enter state 56


State 46

	Integer -> L_integ .                                (rule 2)

	'!'            reduce using rule 2
	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'boolean'      reduce using rule 2
	'else'         reduce using rule 2
	'false'        reduce using rule 2
	'for'          reduce using rule 2
	'if'           reduce using rule 2
	'int'          reduce using rule 2
	'new'          reduce using rule 2
	'return'       reduce using rule 2
	'string'       reduce using rule 2
	'true'         reduce using rule 2
	'void'         reduce using rule 2
	'while'        reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_quoted       reduce using rule 2


State 47

	String -> L_quoted .                                (rule 3)

	'!'            reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	']'            reduce using rule 3
	'boolean'      reduce using rule 3
	'else'         reduce using rule 3
	'false'        reduce using rule 3
	'for'          reduce using rule 3
	'if'           reduce using rule 3
	'int'          reduce using rule 3
	'new'          reduce using rule 3
	'return'       reduce using rule 3
	'string'       reduce using rule 3
	'true'         reduce using rule 3
	'void'         reduce using rule 3
	'while'        reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_quoted       reduce using rule 3


State 48

	TopDef -> 'class' Ident 'extends' Ident . Block     (rule 7)

	'{'            shift, and enter state 20

	Block          goto state 55

State 49

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 54


State 50

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 53


State 51

	Arg -> Type . Ident                                 (rule 10)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 52

State 52

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 53

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 20

	Block          goto state 122

State 54

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 49
	ListArg        goto state 121
	Type           goto state 51

State 55

	TopDef -> 'class' Ident 'extends' Ident Block .     (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 56

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 31)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 120

State 57

	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '[' Expr ']'                       (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 92
			(reduce using rule 48)

	')'            reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            shift, and enter state 115
	']'            reduce using rule 48
	'boolean'      reduce using rule 48
	'else'         reduce using rule 48
	'false'        reduce using rule 48
	'for'          reduce using rule 48
	'if'           reduce using rule 48
	'int'          reduce using rule 48
	'new'          reduce using rule 48
	'return'       reduce using rule 48
	'string'       reduce using rule 48
	'true'         reduce using rule 48
	'void'         reduce using rule 48
	'while'        reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48
	'}'            reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48


State 58

	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '.' Ident                          (rule 55)
	Expr5 -> Expr6 .                                    (rule 63)

	'!'            reduce using rule 63
	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            reduce using rule 63
	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'.'            shift, and enter state 112
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	']'            reduce using rule 63
	'boolean'      reduce using rule 63
	'else'         reduce using rule 63
	'false'        reduce using rule 63
	'for'          reduce using rule 63
	'if'           reduce using rule 63
	'int'          reduce using rule 63
	'new'          reduce using rule 63
	'return'       reduce using rule 63
	'string'       reduce using rule 63
	'true'         reduce using rule 63
	'void'         reduce using rule 63
	'while'        reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63
	'}'            reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 59

	Stmt -> 'return' Expr . ';'                         (rule 27)

	';'            shift, and enter state 119


State 60

	Stmt -> 'return' ';' .                              (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 61

	Type -> Type . '[]'                                 (rule 43)
	Expr6 -> 'new' Type .                               (rule 57)
	Expr6 -> 'new' Type . '[' Integer ']'               (rule 58)

	'!'            reduce using rule 57
	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            shift, and enter state 118
	'[]'           shift, and enter state 15
	']'            reduce using rule 57
	'boolean'      reduce using rule 57
	'else'         reduce using rule 57
	'false'        reduce using rule 57
	'for'          reduce using rule 57
	'if'           reduce using rule 57
	'int'          reduce using rule 57
	'new'          reduce using rule 57
	'return'       reduce using rule 57
	'string'       reduce using rule 57
	'true'         reduce using rule 57
	'void'         reduce using rule 57
	'while'        reduce using rule 57
	'{'            reduce using rule 57
	'||'           reduce using rule 57
	'}'            reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 62

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 117

State 63

	Stmt -> 'for' '(' . Type Ident ':' Ident ')' Stmt    (rule 32)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 116

State 64

	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '.' Ident                          (rule 55)
	Expr5 -> '-' Expr6 .                                (rule 61)

	'!'            reduce using rule 61
	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'.'            shift, and enter state 112
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	']'            reduce using rule 61
	'boolean'      reduce using rule 61
	'else'         reduce using rule 61
	'false'        reduce using rule 61
	'for'          reduce using rule 61
	'if'           reduce using rule 61
	'int'          reduce using rule 61
	'new'          reduce using rule 61
	'return'       reduce using rule 61
	'string'       reduce using rule 61
	'true'         reduce using rule 61
	'void'         reduce using rule 61
	'while'        reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61
	'}'            reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 65

	Type -> Ident .                                     (rule 44)
	Expr6 -> Ident .                                    (rule 48)
	Expr6 -> Ident . '[' Expr ']'                       (rule 49)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 53)

	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            shift, and enter state 92
	')'            reduce using rule 48
	')null'        reduce using rule 44
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            shift, and enter state 115
	'[]'           reduce using rule 44
	'||'           reduce using rule 48


State 66

	Type -> Type . '[]'                                 (rule 43)
	Expr6 -> '(' Type . ')null'                         (rule 56)

	')null'        shift, and enter state 114
	'[]'           shift, and enter state 15


State 67

	Expr6 -> '(' Expr . ')'                             (rule 60)

	')'            shift, and enter state 113


State 68

	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 . '.' Ident                          (rule 55)
	Expr5 -> '!' Expr6 .                                (rule 62)

	'!'            reduce using rule 62
	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'.'            shift, and enter state 112
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	']'            reduce using rule 62
	'boolean'      reduce using rule 62
	'else'         reduce using rule 62
	'false'        reduce using rule 62
	'for'          reduce using rule 62
	'if'           reduce using rule 62
	'int'          reduce using rule 62
	'new'          reduce using rule 62
	'return'       reduce using rule 62
	'string'       reduce using rule 62
	'true'         reduce using rule 62
	'void'         reduce using rule 62
	'while'        reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62
	'}'            reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 69

	Stmt -> Expr ';' .                                  (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 70

	Expr -> Expr1 '||' . Expr                           (rule 72)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 111

State 71

	Expr2 -> Expr2 RelOp . Expr3                        (rule 68)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 110

State 72

	RelOp -> '!=' .                                     (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 73

	Expr1 -> Expr2 '&&' . Expr1                         (rule 70)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 109

State 74

	RelOp -> '<' .                                      (rule 82)

	'!'            reduce using rule 82
	'('            reduce using rule 82
	'-'            reduce using rule 82
	'false'        reduce using rule 82
	'new'          reduce using rule 82
	'true'         reduce using rule 82
	L_Ident        reduce using rule 82
	L_integ        reduce using rule 82
	L_quoted       reduce using rule 82


State 75

	RelOp -> '<=' .                                     (rule 83)

	'!'            reduce using rule 83
	'('            reduce using rule 83
	'-'            reduce using rule 83
	'false'        reduce using rule 83
	'new'          reduce using rule 83
	'true'         reduce using rule 83
	L_Ident        reduce using rule 83
	L_integ        reduce using rule 83
	L_quoted       reduce using rule 83


State 76

	RelOp -> '==' .                                     (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 77

	RelOp -> '>' .                                      (rule 84)

	'!'            reduce using rule 84
	'('            reduce using rule 84
	'-'            reduce using rule 84
	'false'        reduce using rule 84
	'new'          reduce using rule 84
	'true'         reduce using rule 84
	L_Ident        reduce using rule 84
	L_integ        reduce using rule 84
	L_quoted       reduce using rule 84


State 78

	RelOp -> '>=' .                                     (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 79

	Expr3 -> Expr3 AddOp . Expr4                        (rule 66)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 108

State 80

	AddOp -> '+' .                                      (rule 77)

	'!'            reduce using rule 77
	'('            reduce using rule 77
	'-'            reduce using rule 77
	'false'        reduce using rule 77
	'new'          reduce using rule 77
	'true'         reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77


State 81

	AddOp -> '-' .                                      (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	'-'            reduce using rule 78
	'false'        reduce using rule 78
	'new'          reduce using rule 78
	'true'         reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 82

	Expr4 -> Expr4 MulOp . Expr5                        (rule 64)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 107

State 83

	MulOp -> '%' .                                      (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	'-'            reduce using rule 81
	'false'        reduce using rule 81
	'new'          reduce using rule 81
	'true'         reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 84

	MulOp -> '*' .                                      (rule 79)

	'!'            reduce using rule 79
	'('            reduce using rule 79
	'-'            reduce using rule 79
	'false'        reduce using rule 79
	'new'          reduce using rule 79
	'true'         reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79


State 85

	MulOp -> '/' .                                      (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	'-'            reduce using rule 80
	'false'        reduce using rule 80
	'new'          reduce using rule 80
	'true'         reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 86

	Stmt -> Expr6 '.' . Ident '=' Expr                  (rule 22)
	Stmt -> Expr6 '.' . Ident '++' ';'                  (rule 24)
	Stmt -> Expr6 '.' . Ident '--' ';'                  (rule 25)
	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 '.' . Ident                          (rule 55)

	L_Ident        shift, and enter state 2

	Ident          goto state 106

State 87

	Item -> Ident .                                     (rule 34)
	Item -> Ident . '=' Expr                            (rule 35)

	','            reduce using rule 34
	';'            reduce using rule 34
	'='            shift, and enter state 105


State 88

	ListItem -> Item .                                  (rule 36)
	ListItem -> Item . ',' ListItem                     (rule 37)

	','            shift, and enter state 104
	';'            reduce using rule 36


State 89

	Stmt -> Type ListItem . ';'                         (rule 19)

	';'            shift, and enter state 103


State 90

	ListStmt -> Stmt ListStmt .                         (rule 16)

	'}'            reduce using rule 16


State 91

	Block -> '{' ListStmt '}' .                         (rule 14)

	'!'            reduce using rule 14
	'('            reduce using rule 14
	'-'            reduce using rule 14
	';'            reduce using rule 14
	'boolean'      reduce using rule 14
	'class'        reduce using rule 14
	'else'         reduce using rule 14
	'false'        reduce using rule 14
	'for'          reduce using rule 14
	'if'           reduce using rule 14
	'int'          reduce using rule 14
	'new'          reduce using rule 14
	'return'       reduce using rule 14
	'string'       reduce using rule 14
	'true'         reduce using rule 14
	'void'         reduce using rule 14
	'while'        reduce using rule 14
	'{'            reduce using rule 14
	'}'            reduce using rule 14
	L_Ident        reduce using rule 14
	L_integ        reduce using rule 14
	L_quoted       reduce using rule 14
	%eof           reduce using rule 14


State 92

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 53)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	')'            reduce using rule 74
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 101
	ListExpr       goto state 102

State 93

	Stmt -> Ident '++' . ';'                            (rule 23)

	';'            shift, and enter state 100


State 94

	Stmt -> Ident '--' . ';'                            (rule 26)

	';'            shift, and enter state 99


State 95

	Stmt -> Ident '=' . Expr ';'                        (rule 20)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 98

State 96

	Stmt -> Ident '[' . Expr ']' '=' Expr ';'           (rule 21)
	Expr6 -> Ident '[' . Expr ']'                       (rule 49)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 97

State 97

	Stmt -> Ident '[' Expr . ']' '=' Expr ';'           (rule 21)
	Expr6 -> Ident '[' Expr . ']'                       (rule 49)

	']'            shift, and enter state 138


State 98

	Stmt -> Ident '=' Expr . ';'                        (rule 20)

	';'            shift, and enter state 137


State 99

	Stmt -> Ident '--' ';' .                            (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 100

	Stmt -> Ident '++' ';' .                            (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23


State 101

	ListExpr -> Expr .                                  (rule 75)
	ListExpr -> Expr . ',' ListExpr                     (rule 76)

	')'            reduce using rule 75
	','            shift, and enter state 136


State 102

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 53)

	')'            shift, and enter state 135


State 103

	Stmt -> Type ListItem ';' .                         (rule 19)

	'!'            reduce using rule 19
	'('            reduce using rule 19
	'-'            reduce using rule 19
	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'else'         reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'int'          reduce using rule 19
	'new'          reduce using rule 19
	'return'       reduce using rule 19
	'string'       reduce using rule 19
	'true'         reduce using rule 19
	'void'         reduce using rule 19
	'while'        reduce using rule 19
	'{'            reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19
	L_integ        reduce using rule 19
	L_quoted       reduce using rule 19


State 104

	ListItem -> Item ',' . ListItem                     (rule 37)

	L_Ident        shift, and enter state 2

	Ident          goto state 87
	Item           goto state 88
	ListItem       goto state 134

State 105

	Item -> Ident '=' . Expr                            (rule 35)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 133

State 106

	Stmt -> Expr6 '.' Ident . '=' Expr                  (rule 22)
	Stmt -> Expr6 '.' Ident . '++' ';'                  (rule 24)
	Stmt -> Expr6 '.' Ident . '--' ';'                  (rule 25)
	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 '.' Ident .                          (rule 55)

	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            shift, and enter state 129
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'++'           shift, and enter state 130
	'-'            reduce using rule 55
	'--'           shift, and enter state 131
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'='            shift, and enter state 132
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'||'           reduce using rule 55


State 107

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 64)

	'!'            reduce using rule 64
	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	']'            reduce using rule 64
	'boolean'      reduce using rule 64
	'else'         reduce using rule 64
	'false'        reduce using rule 64
	'for'          reduce using rule 64
	'if'           reduce using rule 64
	'int'          reduce using rule 64
	'new'          reduce using rule 64
	'return'       reduce using rule 64
	'string'       reduce using rule 64
	'true'         reduce using rule 64
	'void'         reduce using rule 64
	'while'        reduce using rule 64
	'{'            reduce using rule 64
	'||'           reduce using rule 64
	'}'            reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 108

	Expr4 -> Expr4 . MulOp Expr5                        (rule 64)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 66)

	'!'            reduce using rule 66
	'!='           reduce using rule 66
	'%'            shift, and enter state 83
	'&&'           reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            shift, and enter state 84
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'/'            shift, and enter state 85
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	']'            reduce using rule 66
	'boolean'      reduce using rule 66
	'else'         reduce using rule 66
	'false'        reduce using rule 66
	'for'          reduce using rule 66
	'if'           reduce using rule 66
	'int'          reduce using rule 66
	'new'          reduce using rule 66
	'return'       reduce using rule 66
	'string'       reduce using rule 66
	'true'         reduce using rule 66
	'void'         reduce using rule 66
	'while'        reduce using rule 66
	'{'            reduce using rule 66
	'||'           reduce using rule 66
	'}'            reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66

	MulOp          goto state 82

State 109

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 70)

	'!'            reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	';'            reduce using rule 70
	']'            reduce using rule 70
	'boolean'      reduce using rule 70
	'else'         reduce using rule 70
	'false'        reduce using rule 70
	'for'          reduce using rule 70
	'if'           reduce using rule 70
	'int'          reduce using rule 70
	'new'          reduce using rule 70
	'return'       reduce using rule 70
	'string'       reduce using rule 70
	'true'         reduce using rule 70
	'void'         reduce using rule 70
	'while'        reduce using rule 70
	'{'            reduce using rule 70
	'||'           reduce using rule 70
	'}'            reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 110

	Expr3 -> Expr3 . AddOp Expr4                        (rule 66)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 68)

	'!'            reduce using rule 68
	'!='           reduce using rule 68
	'&&'           reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'+'            shift, and enter state 80
	','            reduce using rule 68
	'-'            shift, and enter state 81
			(reduce using rule 68)

	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	']'            reduce using rule 68
	'boolean'      reduce using rule 68
	'else'         reduce using rule 68
	'false'        reduce using rule 68
	'for'          reduce using rule 68
	'if'           reduce using rule 68
	'int'          reduce using rule 68
	'new'          reduce using rule 68
	'return'       reduce using rule 68
	'string'       reduce using rule 68
	'true'         reduce using rule 68
	'void'         reduce using rule 68
	'while'        reduce using rule 68
	'{'            reduce using rule 68
	'||'           reduce using rule 68
	'}'            reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68

	AddOp          goto state 79

State 111

	Expr -> Expr1 '||' Expr .                           (rule 72)

	'!'            reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	';'            reduce using rule 72
	']'            reduce using rule 72
	'boolean'      reduce using rule 72
	'else'         reduce using rule 72
	'false'        reduce using rule 72
	'for'          reduce using rule 72
	'if'           reduce using rule 72
	'int'          reduce using rule 72
	'new'          reduce using rule 72
	'return'       reduce using rule 72
	'string'       reduce using rule 72
	'true'         reduce using rule 72
	'void'         reduce using rule 72
	'while'        reduce using rule 72
	'{'            reduce using rule 72
	'}'            reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 112

	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 '.' . Ident                          (rule 55)

	L_Ident        shift, and enter state 2

	Ident          goto state 128

State 113

	Expr6 -> '(' Expr ')' .                             (rule 60)

	'!'            reduce using rule 60
	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	']'            reduce using rule 60
	'boolean'      reduce using rule 60
	'else'         reduce using rule 60
	'false'        reduce using rule 60
	'for'          reduce using rule 60
	'if'           reduce using rule 60
	'int'          reduce using rule 60
	'new'          reduce using rule 60
	'return'       reduce using rule 60
	'string'       reduce using rule 60
	'true'         reduce using rule 60
	'void'         reduce using rule 60
	'while'        reduce using rule 60
	'{'            reduce using rule 60
	'||'           reduce using rule 60
	'}'            reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 114

	Expr6 -> '(' Type ')null' .                         (rule 56)

	'!'            reduce using rule 56
	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	']'            reduce using rule 56
	'boolean'      reduce using rule 56
	'else'         reduce using rule 56
	'false'        reduce using rule 56
	'for'          reduce using rule 56
	'if'           reduce using rule 56
	'int'          reduce using rule 56
	'new'          reduce using rule 56
	'return'       reduce using rule 56
	'string'       reduce using rule 56
	'true'         reduce using rule 56
	'void'         reduce using rule 56
	'while'        reduce using rule 56
	'{'            reduce using rule 56
	'||'           reduce using rule 56
	'}'            reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 115

	Expr6 -> Ident '[' . Expr ']'                       (rule 49)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 127

State 116

	Stmt -> 'for' '(' Type . Ident ':' Ident ')' Stmt    (rule 32)
	Type -> Type . '[]'                                 (rule 43)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 126

State 117

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 30)

	')'            shift, and enter state 125


State 118

	Expr6 -> 'new' Type '[' . Integer ']'               (rule 58)

	L_integ        shift, and enter state 46

	Integer        goto state 124

State 119

	Stmt -> 'return' Expr ';' .                         (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 120

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 31)

	')'            shift, and enter state 123


State 121

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 122

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 123

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 31)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 38
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 39
	'for'          shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 10
	'new'          shift, and enter state 42
	'return'       shift, and enter state 43
	'string'       shift, and enter state 11
	'true'         shift, and enter state 44
	'void'         shift, and enter state 12
	'while'        shift, and enter state 45
	'{'            shift, and enter state 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Block          goto state 24
	Stmt           goto state 149
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34

State 124

	Expr6 -> 'new' Type '[' Integer . ']'               (rule 58)

	']'            shift, and enter state 148


State 125

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 29)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 30)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 38
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 39
	'for'          shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 10
	'new'          shift, and enter state 42
	'return'       shift, and enter state 43
	'string'       shift, and enter state 11
	'true'         shift, and enter state 44
	'void'         shift, and enter state 12
	'while'        shift, and enter state 45
	'{'            shift, and enter state 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Block          goto state 24
	Stmt           goto state 147
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34

State 126

	Stmt -> 'for' '(' Type Ident . ':' Ident ')' Stmt    (rule 32)

	':'            shift, and enter state 146


State 127

	Expr6 -> Ident '[' Expr . ']'                       (rule 49)

	']'            shift, and enter state 145


State 128

	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 54)
	Expr6 -> Expr6 '.' Ident .                          (rule 55)

	'!'            reduce using rule 55
	'!='           reduce using rule 55
	'%'            reduce using rule 55
	'&&'           reduce using rule 55
	'('            shift, and enter state 129
			(reduce using rule 55)

	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	','            reduce using rule 55
	'-'            reduce using rule 55
	'.'            reduce using rule 55
	'/'            reduce using rule 55
	';'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=='           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	']'            reduce using rule 55
	'boolean'      reduce using rule 55
	'else'         reduce using rule 55
	'false'        reduce using rule 55
	'for'          reduce using rule 55
	'if'           reduce using rule 55
	'int'          reduce using rule 55
	'new'          reduce using rule 55
	'return'       reduce using rule 55
	'string'       reduce using rule 55
	'true'         reduce using rule 55
	'void'         reduce using rule 55
	'while'        reduce using rule 55
	'{'            reduce using rule 55
	'||'           reduce using rule 55
	'}'            reduce using rule 55
	L_Ident        reduce using rule 55
	L_integ        reduce using rule 55
	L_quoted       reduce using rule 55


State 129

	Expr6 -> Expr6 '.' Ident '(' . ListExpr ')'         (rule 54)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	')'            reduce using rule 74
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 101
	ListExpr       goto state 144

State 130

	Stmt -> Expr6 '.' Ident '++' . ';'                  (rule 24)

	';'            shift, and enter state 143


State 131

	Stmt -> Expr6 '.' Ident '--' . ';'                  (rule 25)

	';'            shift, and enter state 142


State 132

	Stmt -> Expr6 '.' Ident '=' . Expr                  (rule 22)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 141

State 133

	Item -> Ident '=' Expr .                            (rule 35)

	','            reduce using rule 35
	';'            reduce using rule 35


State 134

	ListItem -> Item ',' ListItem .                     (rule 37)

	';'            reduce using rule 37


State 135

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 53)

	'!'            reduce using rule 53
	'!='           reduce using rule 53
	'%'            reduce using rule 53
	'&&'           reduce using rule 53
	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	','            reduce using rule 53
	'-'            reduce using rule 53
	'.'            reduce using rule 53
	'/'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	']'            reduce using rule 53
	'boolean'      reduce using rule 53
	'else'         reduce using rule 53
	'false'        reduce using rule 53
	'for'          reduce using rule 53
	'if'           reduce using rule 53
	'int'          reduce using rule 53
	'new'          reduce using rule 53
	'return'       reduce using rule 53
	'string'       reduce using rule 53
	'true'         reduce using rule 53
	'void'         reduce using rule 53
	'while'        reduce using rule 53
	'{'            reduce using rule 53
	'||'           reduce using rule 53
	'}'            reduce using rule 53
	L_Ident        reduce using rule 53
	L_integ        reduce using rule 53
	L_quoted       reduce using rule 53


State 136

	ListExpr -> Expr ',' . ListExpr                     (rule 76)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	')'            reduce using rule 74
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 101
	ListExpr       goto state 140

State 137

	Stmt -> Ident '=' Expr ';' .                        (rule 20)

	'!'            reduce using rule 20
	'('            reduce using rule 20
	'-'            reduce using rule 20
	';'            reduce using rule 20
	'boolean'      reduce using rule 20
	'else'         reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'int'          reduce using rule 20
	'new'          reduce using rule 20
	'return'       reduce using rule 20
	'string'       reduce using rule 20
	'true'         reduce using rule 20
	'void'         reduce using rule 20
	'while'        reduce using rule 20
	'{'            reduce using rule 20
	'}'            reduce using rule 20
	L_Ident        reduce using rule 20
	L_integ        reduce using rule 20
	L_quoted       reduce using rule 20


State 138

	Stmt -> Ident '[' Expr ']' . '=' Expr ';'           (rule 21)
	Expr6 -> Ident '[' Expr ']' .                       (rule 49)

	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'='            shift, and enter state 139
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'||'           reduce using rule 49


State 139

	Stmt -> Ident '[' Expr ']' '=' . Expr ';'           (rule 21)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	'false'        shift, and enter state 39
	'new'          shift, and enter state 42
	'true'         shift, and enter state 44
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 57
	Integer        goto state 22
	String         goto state 23
	Expr6          goto state 58
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 153

State 140

	ListExpr -> Expr ',' ListExpr .                     (rule 76)

	')'            reduce using rule 76


State 141

	Stmt -> Expr6 '.' Ident '=' Expr .                  (rule 22)

	'!'            reduce using rule 22
	'('            reduce using rule 22
	'-'            reduce using rule 22
	';'            reduce using rule 22
	'boolean'      reduce using rule 22
	'else'         reduce using rule 22
	'false'        reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'int'          reduce using rule 22
	'new'          reduce using rule 22
	'return'       reduce using rule 22
	'string'       reduce using rule 22
	'true'         reduce using rule 22
	'void'         reduce using rule 22
	'while'        reduce using rule 22
	'{'            reduce using rule 22
	'}'            reduce using rule 22
	L_Ident        reduce using rule 22
	L_integ        reduce using rule 22
	L_quoted       reduce using rule 22


State 142

	Stmt -> Expr6 '.' Ident '--' ';' .                  (rule 25)

	'!'            reduce using rule 25
	'('            reduce using rule 25
	'-'            reduce using rule 25
	';'            reduce using rule 25
	'boolean'      reduce using rule 25
	'else'         reduce using rule 25
	'false'        reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'int'          reduce using rule 25
	'new'          reduce using rule 25
	'return'       reduce using rule 25
	'string'       reduce using rule 25
	'true'         reduce using rule 25
	'void'         reduce using rule 25
	'while'        reduce using rule 25
	'{'            reduce using rule 25
	'}'            reduce using rule 25
	L_Ident        reduce using rule 25
	L_integ        reduce using rule 25
	L_quoted       reduce using rule 25


State 143

	Stmt -> Expr6 '.' Ident '++' ';' .                  (rule 24)

	'!'            reduce using rule 24
	'('            reduce using rule 24
	'-'            reduce using rule 24
	';'            reduce using rule 24
	'boolean'      reduce using rule 24
	'else'         reduce using rule 24
	'false'        reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'int'          reduce using rule 24
	'new'          reduce using rule 24
	'return'       reduce using rule 24
	'string'       reduce using rule 24
	'true'         reduce using rule 24
	'void'         reduce using rule 24
	'while'        reduce using rule 24
	'{'            reduce using rule 24
	'}'            reduce using rule 24
	L_Ident        reduce using rule 24
	L_integ        reduce using rule 24
	L_quoted       reduce using rule 24


State 144

	Expr6 -> Expr6 '.' Ident '(' ListExpr . ')'         (rule 54)

	')'            shift, and enter state 152


State 145

	Expr6 -> Ident '[' Expr ']' .                       (rule 49)

	'!'            reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	']'            reduce using rule 49
	'boolean'      reduce using rule 49
	'else'         reduce using rule 49
	'false'        reduce using rule 49
	'for'          reduce using rule 49
	'if'           reduce using rule 49
	'int'          reduce using rule 49
	'new'          reduce using rule 49
	'return'       reduce using rule 49
	'string'       reduce using rule 49
	'true'         reduce using rule 49
	'void'         reduce using rule 49
	'while'        reduce using rule 49
	'{'            reduce using rule 49
	'||'           reduce using rule 49
	'}'            reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 146

	Stmt -> 'for' '(' Type Ident ':' . Ident ')' Stmt    (rule 32)

	L_Ident        shift, and enter state 2

	Ident          goto state 151

State 147

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 29)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 30)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         shift, and enter state 150
			(reduce using rule 29)

	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 148

	Expr6 -> 'new' Type '[' Integer ']' .               (rule 58)

	'!'            reduce using rule 58
	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	']'            reduce using rule 58
	'boolean'      reduce using rule 58
	'else'         reduce using rule 58
	'false'        reduce using rule 58
	'for'          reduce using rule 58
	'if'           reduce using rule 58
	'int'          reduce using rule 58
	'new'          reduce using rule 58
	'return'       reduce using rule 58
	'string'       reduce using rule 58
	'true'         reduce using rule 58
	'void'         reduce using rule 58
	'while'        reduce using rule 58
	'{'            reduce using rule 58
	'||'           reduce using rule 58
	'}'            reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 149

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 150

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 30)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 38
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 39
	'for'          shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 10
	'new'          shift, and enter state 42
	'return'       shift, and enter state 43
	'string'       shift, and enter state 11
	'true'         shift, and enter state 44
	'void'         shift, and enter state 12
	'while'        shift, and enter state 45
	'{'            shift, and enter state 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Block          goto state 24
	Stmt           goto state 156
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34

State 151

	Stmt -> 'for' '(' Type Ident ':' Ident . ')' Stmt    (rule 32)

	')'            shift, and enter state 155


State 152

	Expr6 -> Expr6 '.' Ident '(' ListExpr ')' .         (rule 54)

	'!'            reduce using rule 54
	'!='           reduce using rule 54
	'%'            reduce using rule 54
	'&&'           reduce using rule 54
	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	','            reduce using rule 54
	'-'            reduce using rule 54
	'.'            reduce using rule 54
	'/'            reduce using rule 54
	';'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=='           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	']'            reduce using rule 54
	'boolean'      reduce using rule 54
	'else'         reduce using rule 54
	'false'        reduce using rule 54
	'for'          reduce using rule 54
	'if'           reduce using rule 54
	'int'          reduce using rule 54
	'new'          reduce using rule 54
	'return'       reduce using rule 54
	'string'       reduce using rule 54
	'true'         reduce using rule 54
	'void'         reduce using rule 54
	'while'        reduce using rule 54
	'{'            reduce using rule 54
	'||'           reduce using rule 54
	'}'            reduce using rule 54
	L_Ident        reduce using rule 54
	L_integ        reduce using rule 54
	L_quoted       reduce using rule 54


State 153

	Stmt -> Ident '[' Expr ']' '=' Expr . ';'           (rule 21)

	';'            shift, and enter state 154


State 154

	Stmt -> Ident '[' Expr ']' '=' Expr ';' .           (rule 21)

	'!'            reduce using rule 21
	'('            reduce using rule 21
	'-'            reduce using rule 21
	';'            reduce using rule 21
	'boolean'      reduce using rule 21
	'else'         reduce using rule 21
	'false'        reduce using rule 21
	'for'          reduce using rule 21
	'if'           reduce using rule 21
	'int'          reduce using rule 21
	'new'          reduce using rule 21
	'return'       reduce using rule 21
	'string'       reduce using rule 21
	'true'         reduce using rule 21
	'void'         reduce using rule 21
	'while'        reduce using rule 21
	'{'            reduce using rule 21
	'}'            reduce using rule 21
	L_Ident        reduce using rule 21
	L_integ        reduce using rule 21
	L_quoted       reduce using rule 21


State 155

	Stmt -> 'for' '(' Type Ident ':' Ident ')' . Stmt    (rule 32)

	'!'            shift, and enter state 35
	'('            shift, and enter state 36
	'-'            shift, and enter state 37
	';'            shift, and enter state 38
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 39
	'for'          shift, and enter state 40
	'if'           shift, and enter state 41
	'int'          shift, and enter state 10
	'new'          shift, and enter state 42
	'return'       shift, and enter state 43
	'string'       shift, and enter state 11
	'true'         shift, and enter state 44
	'void'         shift, and enter state 12
	'while'        shift, and enter state 45
	'{'            shift, and enter state 20
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 46
	L_quoted       shift, and enter state 47

	Ident          goto state 21
	Integer        goto state 22
	String         goto state 23
	Block          goto state 24
	Stmt           goto state 157
	Type           goto state 27
	Expr6          goto state 28
	Expr5          goto state 29
	Expr4          goto state 30
	Expr3          goto state 31
	Expr2          goto state 32
	Expr1          goto state 33
	Expr           goto state 34

State 156

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 157

	Stmt -> 'for' '(' Type Ident ':' Ident ')' Stmt .    (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 88
Number of terminals: 46
Number of non-terminals: 28
Number of states: 158
