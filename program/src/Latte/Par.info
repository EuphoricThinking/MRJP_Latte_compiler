-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.0 from Latte/Par.y
-----------------------------------------------------------------------------

state 54 contains 1 shift/reduce conflicts.
state 76 contains 1 shift/reduce conflicts.
state 80 contains 1 shift/reduce conflicts.
state 129 contains 1 shift/reduce conflicts.
state 146 contains 1 shift/reduce conflicts.
state 165 contains 1 shift/reduce conflicts.

rule 53 is unused
rule 54 is unused
rule 55 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProgram_internal -> Program                (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Program -> ListTopDef                              (4)
	TopDef -> Type Ident '(' ListArg ')' Block         (5)
	TopDef -> 'class' Ident ClassBody                  (6)
	TopDef -> 'class' Ident 'extends' Ident ClassBody   (7)
	ListTopDef -> TopDef                               (8)
	ListTopDef -> TopDef ListTopDef                    (9)
	Arg -> Type Ident                                  (10)
	ListArg ->                                         (11)
	ListArg -> Arg                                     (12)
	ListArg -> Arg ',' ListArg                         (13)
	ClassBody -> '{' ListClassStmt '}'                 (14)
	ListClassStmt ->                                   (15)
	ListClassStmt -> ClassStmt ListClassStmt           (16)
	ClassStmt -> ';'                                   (17)
	ClassStmt -> Type ListClassItem ';'                (18)
	ClassStmt -> Type Ident '(' ListArg ')' Block      (19)
	ClassItem -> Ident                                 (20)
	ListClassItem -> ClassItem                         (21)
	ListClassItem -> ClassItem ',' ListClassItem       (22)
	Block -> '{' ListStmt '}'                          (23)
	ListStmt ->                                        (24)
	ListStmt -> Stmt ListStmt                          (25)
	Stmt -> ';'                                        (26)
	Stmt -> Block                                      (27)
	Stmt -> Type ListItem ';'                          (28)
	Stmt -> Ident '=' Expr ';'                         (29)
	Stmt -> Expr6 '[' Expr ']' '=' Expr ';'            (30)
	Stmt -> Expr6 '.' Ident '=' Expr                   (31)
	Stmt -> Ident '++' ';'                             (32)
	Stmt -> Expr6 '.' Ident '++' ';'                   (33)
	Stmt -> Expr6 '.' Ident '--' ';'                   (34)
	Stmt -> Ident '--' ';'                             (35)
	Stmt -> 'return' Expr ';'                          (36)
	Stmt -> 'return' ';'                               (37)
	Stmt -> 'if' '(' Expr ')' Stmt                     (38)
	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt         (39)
	Stmt -> 'while' '(' Expr ')' Stmt                  (40)
	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt     (41)
	Stmt -> Expr ';'                                   (42)
	Item -> Ident                                      (43)
	Item -> Ident '=' Expr                             (44)
	ListItem -> Item                                   (45)
	ListItem -> Item ',' ListItem                      (46)
	Type -> 'int'                                      (47)
	Type -> 'string'                                   (48)
	Type -> 'boolean'                                  (49)
	Type -> 'void'                                     (50)
	Type -> Type '[]'                                  (51)
	Type -> Ident                                      (52)
	ListType ->                                        (53)
	ListType -> Type                                   (54)
	ListType -> Type ',' ListType                      (55)
	Expr6 -> Ident                                     (56)
	Expr6 -> Expr6 '[' Expr ']'                        (57)
	Expr6 -> Integer                                   (58)
	Expr6 -> 'true'                                    (59)
	Expr6 -> 'false'                                   (60)
	Expr6 -> Ident '(' ListExpr ')'                    (61)
	Expr6 -> Expr6 '.' Ident '(' ListExpr ')'          (62)
	Expr6 -> Expr6 '.' Ident                           (63)
	Expr6 -> '(' Type ')null'                          (64)
	Expr6 -> 'new' Type                                (65)
	Expr6 -> 'new' Type '[' Expr ']'                   (66)
	Expr6 -> String                                    (67)
	Expr6 -> '(' Expr ')'                              (68)
	Expr5 -> '-' Expr6                                 (69)
	Expr5 -> '!' Expr6                                 (70)
	Expr5 -> Expr6                                     (71)
	Expr4 -> Expr4 MulOp Expr5                         (72)
	Expr4 -> Expr5                                     (73)
	Expr3 -> Expr3 AddOp Expr4                         (74)
	Expr3 -> Expr4                                     (75)
	Expr2 -> Expr2 RelOp Expr3                         (76)
	Expr2 -> Expr3                                     (77)
	Expr1 -> Expr2 '&&' Expr1                          (78)
	Expr1 -> Expr2                                     (79)
	Expr -> Expr1 '||' Expr                            (80)
	Expr -> Expr1                                      (81)
	ListExpr ->                                        (82)
	ListExpr -> Expr                                   (83)
	ListExpr -> Expr ',' ListExpr                      (84)
	AddOp -> '+'                                       (85)
	AddOp -> '-'                                       (86)
	MulOp -> '*'                                       (87)
	MulOp -> '/'                                       (88)
	MulOp -> '%'                                       (89)
	RelOp -> '<'                                       (90)
	RelOp -> '<='                                      (91)
	RelOp -> '>'                                       (92)
	RelOp -> '>='                                      (93)
	RelOp -> '=='                                      (94)
	RelOp -> '!='                                      (95)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'%'            { PT _ (TS _ 3) }
	'&&'           { PT _ (TS _ 4) }
	'('            { PT _ (TS _ 5) }
	')'            { PT _ (TS _ 6) }
	')null'        { PT _ (TS _ 7) }
	'*'            { PT _ (TS _ 8) }
	'+'            { PT _ (TS _ 9) }
	'++'           { PT _ (TS _ 10) }
	','            { PT _ (TS _ 11) }
	'-'            { PT _ (TS _ 12) }
	'--'           { PT _ (TS _ 13) }
	'.'            { PT _ (TS _ 14) }
	'/'            { PT _ (TS _ 15) }
	':'            { PT _ (TS _ 16) }
	';'            { PT _ (TS _ 17) }
	'<'            { PT _ (TS _ 18) }
	'<='           { PT _ (TS _ 19) }
	'='            { PT _ (TS _ 20) }
	'=='           { PT _ (TS _ 21) }
	'>'            { PT _ (TS _ 22) }
	'>='           { PT _ (TS _ 23) }
	'['            { PT _ (TS _ 24) }
	'[]'           { PT _ (TS _ 25) }
	']'            { PT _ (TS _ 26) }
	'boolean'      { PT _ (TS _ 27) }
	'class'        { PT _ (TS _ 28) }
	'else'         { PT _ (TS _ 29) }
	'extends'      { PT _ (TS _ 30) }
	'false'        { PT _ (TS _ 31) }
	'for'          { PT _ (TS _ 32) }
	'if'           { PT _ (TS _ 33) }
	'int'          { PT _ (TS _ 34) }
	'new'          { PT _ (TS _ 35) }
	'return'       { PT _ (TS _ 36) }
	'string'       { PT _ (TS _ 37) }
	'true'         { PT _ (TS _ 38) }
	'void'         { PT _ (TS _ 39) }
	'while'        { PT _ (TS _ 40) }
	'{'            { PT _ (TS _ 41) }
	'||'           { PT _ (TS _ 42) }
	'}'            { PT _ (TS _ 43) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProgram_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Program         rule  4
	TopDef          rules 5, 6, 7
	ListTopDef      rules 8, 9
	Arg             rule  10
	ListArg         rules 11, 12, 13
	ClassBody       rule  14
	ListClassStmt   rules 15, 16
	ClassStmt       rules 17, 18, 19
	ClassItem       rule  20
	ListClassItem   rules 21, 22
	Block           rule  23
	ListStmt        rules 24, 25
	Stmt            rules 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42
	Item            rules 43, 44
	ListItem        rules 45, 46
	Type            rules 47, 48, 49, 50, 51, 52
	ListType        rules 53, 54, 55
	Expr6           rules 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68
	Expr5           rules 69, 70, 71
	Expr4           rules 72, 73
	Expr3           rules 74, 75
	Expr2           rules 76, 77
	Expr1           rules 78, 79
	Expr            rules 80, 81
	ListExpr        rules 82, 83, 84
	AddOp           rules 85, 86
	MulOp           rules 87, 88, 89
	RelOp           rules 90, 91, 92, 93, 94, 95

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_pProgram_internal -> . Program               (rule 0)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Program        goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	Type           goto state 7

State 1

	Ident -> . L_Ident                                  (rule 1)

	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!'            reduce using rule 1
	'!='           reduce using rule 1
	'%'            reduce using rule 1
	'&&'           reduce using rule 1
	'('            reduce using rule 1
	')'            reduce using rule 1
	')null'        reduce using rule 1
	'*'            reduce using rule 1
	'+'            reduce using rule 1
	'++'           reduce using rule 1
	','            reduce using rule 1
	'-'            reduce using rule 1
	'--'           reduce using rule 1
	'.'            reduce using rule 1
	'/'            reduce using rule 1
	':'            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'['            reduce using rule 1
	'[]'           reduce using rule 1
	']'            reduce using rule 1
	'boolean'      reduce using rule 1
	'else'         reduce using rule 1
	'extends'      reduce using rule 1
	'false'        reduce using rule 1
	'for'          reduce using rule 1
	'if'           reduce using rule 1
	'int'          reduce using rule 1
	'new'          reduce using rule 1
	'return'       reduce using rule 1
	'string'       reduce using rule 1
	'true'         reduce using rule 1
	'void'         reduce using rule 1
	'while'        reduce using rule 1
	'{'            reduce using rule 1
	'||'           reduce using rule 1
	'}'            reduce using rule 1
	L_Ident        reduce using rule 1
	L_integ        reduce using rule 1
	L_quoted       reduce using rule 1


State 3

	Type -> Ident .                                     (rule 52)

	'!'            reduce using rule 52
	'!='           reduce using rule 52
	'%'            reduce using rule 52
	'&&'           reduce using rule 52
	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	','            reduce using rule 52
	'-'            reduce using rule 52
	'.'            reduce using rule 52
	'/'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'['            reduce using rule 52
	'[]'           reduce using rule 52
	']'            reduce using rule 52
	'boolean'      reduce using rule 52
	'else'         reduce using rule 52
	'false'        reduce using rule 52
	'for'          reduce using rule 52
	'if'           reduce using rule 52
	'int'          reduce using rule 52
	'new'          reduce using rule 52
	'return'       reduce using rule 52
	'string'       reduce using rule 52
	'true'         reduce using rule 52
	'void'         reduce using rule 52
	'while'        reduce using rule 52
	'{'            reduce using rule 52
	'||'           reduce using rule 52
	'}'            reduce using rule 52
	L_Ident        reduce using rule 52
	L_integ        reduce using rule 52
	L_quoted       reduce using rule 52


State 4

	%start_pProgram_internal -> Program .               (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 8)
	ListTopDef -> TopDef . ListTopDef                   (rule 9)

	'boolean'      shift, and enter state 8
	'class'        shift, and enter state 9
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 8

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 16
	Type           goto state 7

State 6

	Program -> ListTopDef .                             (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> Type . Ident '(' ListArg ')' Block        (rule 5)
	Type -> Type . '[]'                                 (rule 51)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 14

State 8

	Type -> 'boolean' .                                 (rule 49)

	'!'            reduce using rule 49
	'!='           reduce using rule 49
	'%'            reduce using rule 49
	'&&'           reduce using rule 49
	'('            reduce using rule 49
	')'            reduce using rule 49
	')null'        reduce using rule 49
	'*'            reduce using rule 49
	'+'            reduce using rule 49
	','            reduce using rule 49
	'-'            reduce using rule 49
	'.'            reduce using rule 49
	'/'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'['            reduce using rule 49
	'[]'           reduce using rule 49
	']'            reduce using rule 49
	'boolean'      reduce using rule 49
	'else'         reduce using rule 49
	'false'        reduce using rule 49
	'for'          reduce using rule 49
	'if'           reduce using rule 49
	'int'          reduce using rule 49
	'new'          reduce using rule 49
	'return'       reduce using rule 49
	'string'       reduce using rule 49
	'true'         reduce using rule 49
	'void'         reduce using rule 49
	'while'        reduce using rule 49
	'{'            reduce using rule 49
	'||'           reduce using rule 49
	'}'            reduce using rule 49
	L_Ident        reduce using rule 49
	L_integ        reduce using rule 49
	L_quoted       reduce using rule 49


State 9

	TopDef -> 'class' . Ident ClassBody                 (rule 6)
	TopDef -> 'class' . Ident 'extends' Ident ClassBody    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 13

State 10

	Type -> 'int' .                                     (rule 47)

	'!'            reduce using rule 47
	'!='           reduce using rule 47
	'%'            reduce using rule 47
	'&&'           reduce using rule 47
	'('            reduce using rule 47
	')'            reduce using rule 47
	')null'        reduce using rule 47
	'*'            reduce using rule 47
	'+'            reduce using rule 47
	','            reduce using rule 47
	'-'            reduce using rule 47
	'.'            reduce using rule 47
	'/'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'['            reduce using rule 47
	'[]'           reduce using rule 47
	']'            reduce using rule 47
	'boolean'      reduce using rule 47
	'else'         reduce using rule 47
	'false'        reduce using rule 47
	'for'          reduce using rule 47
	'if'           reduce using rule 47
	'int'          reduce using rule 47
	'new'          reduce using rule 47
	'return'       reduce using rule 47
	'string'       reduce using rule 47
	'true'         reduce using rule 47
	'void'         reduce using rule 47
	'while'        reduce using rule 47
	'{'            reduce using rule 47
	'||'           reduce using rule 47
	'}'            reduce using rule 47
	L_Ident        reduce using rule 47
	L_integ        reduce using rule 47
	L_quoted       reduce using rule 47


State 11

	Type -> 'string' .                                  (rule 48)

	'!'            reduce using rule 48
	'!='           reduce using rule 48
	'%'            reduce using rule 48
	'&&'           reduce using rule 48
	'('            reduce using rule 48
	')'            reduce using rule 48
	')null'        reduce using rule 48
	'*'            reduce using rule 48
	'+'            reduce using rule 48
	','            reduce using rule 48
	'-'            reduce using rule 48
	'.'            reduce using rule 48
	'/'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'['            reduce using rule 48
	'[]'           reduce using rule 48
	']'            reduce using rule 48
	'boolean'      reduce using rule 48
	'else'         reduce using rule 48
	'false'        reduce using rule 48
	'for'          reduce using rule 48
	'if'           reduce using rule 48
	'int'          reduce using rule 48
	'new'          reduce using rule 48
	'return'       reduce using rule 48
	'string'       reduce using rule 48
	'true'         reduce using rule 48
	'void'         reduce using rule 48
	'while'        reduce using rule 48
	'{'            reduce using rule 48
	'||'           reduce using rule 48
	'}'            reduce using rule 48
	L_Ident        reduce using rule 48
	L_integ        reduce using rule 48
	L_quoted       reduce using rule 48


State 12

	Type -> 'void' .                                    (rule 50)

	'!'            reduce using rule 50
	'!='           reduce using rule 50
	'%'            reduce using rule 50
	'&&'           reduce using rule 50
	'('            reduce using rule 50
	')'            reduce using rule 50
	')null'        reduce using rule 50
	'*'            reduce using rule 50
	'+'            reduce using rule 50
	','            reduce using rule 50
	'-'            reduce using rule 50
	'.'            reduce using rule 50
	'/'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'['            reduce using rule 50
	'[]'           reduce using rule 50
	']'            reduce using rule 50
	'boolean'      reduce using rule 50
	'else'         reduce using rule 50
	'false'        reduce using rule 50
	'for'          reduce using rule 50
	'if'           reduce using rule 50
	'int'          reduce using rule 50
	'new'          reduce using rule 50
	'return'       reduce using rule 50
	'string'       reduce using rule 50
	'true'         reduce using rule 50
	'void'         reduce using rule 50
	'while'        reduce using rule 50
	'{'            reduce using rule 50
	'||'           reduce using rule 50
	'}'            reduce using rule 50
	L_Ident        reduce using rule 50
	L_integ        reduce using rule 50
	L_quoted       reduce using rule 50


State 13

	TopDef -> 'class' Ident . ClassBody                 (rule 6)
	TopDef -> 'class' Ident . 'extends' Ident ClassBody    (rule 7)

	'extends'      shift, and enter state 19
	'{'            shift, and enter state 20

	ClassBody      goto state 18

State 14

	TopDef -> Type Ident . '(' ListArg ')' Block        (rule 5)

	'('            shift, and enter state 17


State 15

	Type -> Type '[]' .                                 (rule 51)

	'!'            reduce using rule 51
	'!='           reduce using rule 51
	'%'            reduce using rule 51
	'&&'           reduce using rule 51
	'('            reduce using rule 51
	')'            reduce using rule 51
	')null'        reduce using rule 51
	'*'            reduce using rule 51
	'+'            reduce using rule 51
	','            reduce using rule 51
	'-'            reduce using rule 51
	'.'            reduce using rule 51
	'/'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'['            reduce using rule 51
	'[]'           reduce using rule 51
	']'            reduce using rule 51
	'boolean'      reduce using rule 51
	'else'         reduce using rule 51
	'false'        reduce using rule 51
	'for'          reduce using rule 51
	'if'           reduce using rule 51
	'int'          reduce using rule 51
	'new'          reduce using rule 51
	'return'       reduce using rule 51
	'string'       reduce using rule 51
	'true'         reduce using rule 51
	'void'         reduce using rule 51
	'while'        reduce using rule 51
	'{'            reduce using rule 51
	'||'           reduce using rule 51
	'}'            reduce using rule 51
	L_Ident        reduce using rule 51
	L_integ        reduce using rule 51
	L_quoted       reduce using rule 51


State 16

	ListTopDef -> TopDef ListTopDef .                   (rule 9)

	%eof           reduce using rule 9


State 17

	TopDef -> Type Ident '(' . ListArg ')' Block        (rule 5)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 26
	ListArg        goto state 27
	Type           goto state 28

State 18

	TopDef -> 'class' Ident ClassBody .                 (rule 6)

	'boolean'      reduce using rule 6
	'class'        reduce using rule 6
	'int'          reduce using rule 6
	'string'       reduce using rule 6
	'void'         reduce using rule 6
	L_Ident        reduce using rule 6
	%eof           reduce using rule 6


State 19

	TopDef -> 'class' Ident 'extends' . Ident ClassBody    (rule 7)

	L_Ident        shift, and enter state 2

	Ident          goto state 25

State 20

	ClassBody -> '{' . ListClassStmt '}'                (rule 14)

	';'            shift, and enter state 24
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ListClassStmt  goto state 21
	ClassStmt      goto state 22
	Type           goto state 23

State 21

	ClassBody -> '{' ListClassStmt . '}'                (rule 14)

	'}'            shift, and enter state 37


State 22

	ListClassStmt -> ClassStmt . ListClassStmt          (rule 16)

	';'            shift, and enter state 24
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	'}'            reduce using rule 15
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	ListClassStmt  goto state 36
	ClassStmt      goto state 22
	Type           goto state 23

State 23

	ClassStmt -> Type . ListClassItem ';'               (rule 18)
	ClassStmt -> Type . Ident '(' ListArg ')' Block     (rule 19)
	Type -> Type . '[]'                                 (rule 51)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 33
	ClassItem      goto state 34
	ListClassItem  goto state 35

State 24

	ClassStmt -> ';' .                                  (rule 17)

	';'            reduce using rule 17
	'boolean'      reduce using rule 17
	'int'          reduce using rule 17
	'string'       reduce using rule 17
	'void'         reduce using rule 17
	'}'            reduce using rule 17
	L_Ident        reduce using rule 17


State 25

	TopDef -> 'class' Ident 'extends' Ident . ClassBody    (rule 7)

	'{'            shift, and enter state 20

	ClassBody      goto state 32

State 26

	ListArg -> Arg .                                    (rule 12)
	ListArg -> Arg . ',' ListArg                        (rule 13)

	')'            reduce using rule 12
	','            shift, and enter state 31


State 27

	TopDef -> Type Ident '(' ListArg . ')' Block        (rule 5)

	')'            shift, and enter state 30


State 28

	Arg -> Type . Ident                                 (rule 10)
	Type -> Type . '[]'                                 (rule 51)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 29

State 29

	Arg -> Type Ident .                                 (rule 10)

	')'            reduce using rule 10
	','            reduce using rule 10


State 30

	TopDef -> Type Ident '(' ListArg ')' . Block        (rule 5)

	'{'            shift, and enter state 43

	Block          goto state 42

State 31

	ListArg -> Arg ',' . ListArg                        (rule 13)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 26
	ListArg        goto state 41
	Type           goto state 28

State 32

	TopDef -> 'class' Ident 'extends' Ident ClassBody .    (rule 7)

	'boolean'      reduce using rule 7
	'class'        reduce using rule 7
	'int'          reduce using rule 7
	'string'       reduce using rule 7
	'void'         reduce using rule 7
	L_Ident        reduce using rule 7
	%eof           reduce using rule 7


State 33

	ClassStmt -> Type Ident . '(' ListArg ')' Block     (rule 19)
	ClassItem -> Ident .                                (rule 20)

	'('            shift, and enter state 40
	','            reduce using rule 20
	';'            reduce using rule 20


State 34

	ListClassItem -> ClassItem .                        (rule 21)
	ListClassItem -> ClassItem . ',' ListClassItem      (rule 22)

	','            shift, and enter state 39
	';'            reduce using rule 21


State 35

	ClassStmt -> Type ListClassItem . ';'               (rule 18)

	';'            shift, and enter state 38


State 36

	ListClassStmt -> ClassStmt ListClassStmt .          (rule 16)

	'}'            reduce using rule 16


State 37

	ClassBody -> '{' ListClassStmt '}' .                (rule 14)

	'boolean'      reduce using rule 14
	'class'        reduce using rule 14
	'int'          reduce using rule 14
	'string'       reduce using rule 14
	'void'         reduce using rule 14
	L_Ident        reduce using rule 14
	%eof           reduce using rule 14


State 38

	ClassStmt -> Type ListClassItem ';' .               (rule 18)

	';'            reduce using rule 18
	'boolean'      reduce using rule 18
	'int'          reduce using rule 18
	'string'       reduce using rule 18
	'void'         reduce using rule 18
	'}'            reduce using rule 18
	L_Ident        reduce using rule 18


State 39

	ListClassItem -> ClassItem ',' . ListClassItem      (rule 22)

	L_Ident        shift, and enter state 2

	Ident          goto state 72
	ClassItem      goto state 34
	ListClassItem  goto state 73

State 40

	ClassStmt -> Type Ident '(' . ListArg ')' Block     (rule 19)

	')'            reduce using rule 11
	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Arg            goto state 26
	ListArg        goto state 71
	Type           goto state 28

State 41

	ListArg -> Arg ',' ListArg .                        (rule 13)

	')'            reduce using rule 13


State 42

	TopDef -> Type Ident '(' ListArg ')' Block .        (rule 5)

	'boolean'      reduce using rule 5
	'class'        reduce using rule 5
	'int'          reduce using rule 5
	'string'       reduce using rule 5
	'void'         reduce using rule 5
	L_Ident        reduce using rule 5
	%eof           reduce using rule 5


State 43

	Block -> '{' . ListStmt '}'                         (rule 23)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 43
	'}'            reduce using rule 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	ListStmt       goto state 48
	Stmt           goto state 49
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 44

	Stmt -> Ident . '=' Expr ';'                        (rule 29)
	Stmt -> Ident . '++' ';'                            (rule 32)
	Stmt -> Ident . '--' ';'                            (rule 35)
	Type -> Ident .                                     (rule 52)
	Expr6 -> Ident .                                    (rule 56)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 61)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            shift, and enter state 112
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'++'           shift, and enter state 113
	'-'            reduce using rule 56
	'--'           shift, and enter state 114
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'='            shift, and enter state 115
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	'[]'           reduce using rule 52
	'||'           reduce using rule 56
	L_Ident        reduce using rule 52


State 45

	Expr6 -> Integer .                                  (rule 58)

	'!'            reduce using rule 58
	'!='           reduce using rule 58
	'%'            reduce using rule 58
	'&&'           reduce using rule 58
	'('            reduce using rule 58
	')'            reduce using rule 58
	'*'            reduce using rule 58
	'+'            reduce using rule 58
	','            reduce using rule 58
	'-'            reduce using rule 58
	'.'            reduce using rule 58
	'/'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'['            reduce using rule 58
	']'            reduce using rule 58
	'boolean'      reduce using rule 58
	'else'         reduce using rule 58
	'false'        reduce using rule 58
	'for'          reduce using rule 58
	'if'           reduce using rule 58
	'int'          reduce using rule 58
	'new'          reduce using rule 58
	'return'       reduce using rule 58
	'string'       reduce using rule 58
	'true'         reduce using rule 58
	'void'         reduce using rule 58
	'while'        reduce using rule 58
	'{'            reduce using rule 58
	'||'           reduce using rule 58
	'}'            reduce using rule 58
	L_Ident        reduce using rule 58
	L_integ        reduce using rule 58
	L_quoted       reduce using rule 58


State 46

	Expr6 -> String .                                   (rule 67)

	'!'            reduce using rule 67
	'!='           reduce using rule 67
	'%'            reduce using rule 67
	'&&'           reduce using rule 67
	'('            reduce using rule 67
	')'            reduce using rule 67
	'*'            reduce using rule 67
	'+'            reduce using rule 67
	','            reduce using rule 67
	'-'            reduce using rule 67
	'.'            reduce using rule 67
	'/'            reduce using rule 67
	';'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'['            reduce using rule 67
	']'            reduce using rule 67
	'boolean'      reduce using rule 67
	'else'         reduce using rule 67
	'false'        reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'int'          reduce using rule 67
	'new'          reduce using rule 67
	'return'       reduce using rule 67
	'string'       reduce using rule 67
	'true'         reduce using rule 67
	'void'         reduce using rule 67
	'while'        reduce using rule 67
	'{'            reduce using rule 67
	'||'           reduce using rule 67
	'}'            reduce using rule 67
	L_Ident        reduce using rule 67
	L_integ        reduce using rule 67
	L_quoted       reduce using rule 67


State 47

	Stmt -> Block .                                     (rule 27)

	'!'            reduce using rule 27
	'('            reduce using rule 27
	'-'            reduce using rule 27
	';'            reduce using rule 27
	'boolean'      reduce using rule 27
	'else'         reduce using rule 27
	'false'        reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'int'          reduce using rule 27
	'new'          reduce using rule 27
	'return'       reduce using rule 27
	'string'       reduce using rule 27
	'true'         reduce using rule 27
	'void'         reduce using rule 27
	'while'        reduce using rule 27
	'{'            reduce using rule 27
	'}'            reduce using rule 27
	L_Ident        reduce using rule 27
	L_integ        reduce using rule 27
	L_quoted       reduce using rule 27


State 48

	Block -> '{' ListStmt . '}'                         (rule 23)

	'}'            shift, and enter state 111


State 49

	ListStmt -> Stmt . ListStmt                         (rule 25)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 43
	'}'            reduce using rule 24
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	ListStmt       goto state 110
	Stmt           goto state 49
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 50

	Stmt -> Type . ListItem ';'                         (rule 28)
	Type -> Type . '[]'                                 (rule 51)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 107
	Item           goto state 108
	ListItem       goto state 109

State 51

	Stmt -> Expr6 . '[' Expr ']' '=' Expr ';'           (rule 30)
	Stmt -> Expr6 . '.' Ident '=' Expr                  (rule 31)
	Stmt -> Expr6 . '.' Ident '++' ';'                  (rule 33)
	Stmt -> Expr6 . '.' Ident '--' ';'                  (rule 34)
	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 . '.' Ident                          (rule 63)
	Expr5 -> Expr6 .                                    (rule 71)

	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	'-'            reduce using rule 71
	'.'            shift, and enter state 105
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'['            shift, and enter state 106
	'||'           reduce using rule 71


State 52

	Expr4 -> Expr5 .                                    (rule 73)

	'!'            reduce using rule 73
	'!='           reduce using rule 73
	'%'            reduce using rule 73
	'&&'           reduce using rule 73
	'('            reduce using rule 73
	')'            reduce using rule 73
	'*'            reduce using rule 73
	'+'            reduce using rule 73
	','            reduce using rule 73
	'-'            reduce using rule 73
	'/'            reduce using rule 73
	';'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	']'            reduce using rule 73
	'boolean'      reduce using rule 73
	'else'         reduce using rule 73
	'false'        reduce using rule 73
	'for'          reduce using rule 73
	'if'           reduce using rule 73
	'int'          reduce using rule 73
	'new'          reduce using rule 73
	'return'       reduce using rule 73
	'string'       reduce using rule 73
	'true'         reduce using rule 73
	'void'         reduce using rule 73
	'while'        reduce using rule 73
	'{'            reduce using rule 73
	'||'           reduce using rule 73
	'}'            reduce using rule 73
	L_Ident        reduce using rule 73
	L_integ        reduce using rule 73
	L_quoted       reduce using rule 73


State 53

	Expr4 -> Expr4 . MulOp Expr5                        (rule 72)
	Expr3 -> Expr4 .                                    (rule 75)

	'!'            reduce using rule 75
	'!='           reduce using rule 75
	'%'            shift, and enter state 102
	'&&'           reduce using rule 75
	'('            reduce using rule 75
	')'            reduce using rule 75
	'*'            shift, and enter state 103
	'+'            reduce using rule 75
	','            reduce using rule 75
	'-'            reduce using rule 75
	'/'            shift, and enter state 104
	';'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	']'            reduce using rule 75
	'boolean'      reduce using rule 75
	'else'         reduce using rule 75
	'false'        reduce using rule 75
	'for'          reduce using rule 75
	'if'           reduce using rule 75
	'int'          reduce using rule 75
	'new'          reduce using rule 75
	'return'       reduce using rule 75
	'string'       reduce using rule 75
	'true'         reduce using rule 75
	'void'         reduce using rule 75
	'while'        reduce using rule 75
	'{'            reduce using rule 75
	'||'           reduce using rule 75
	'}'            reduce using rule 75
	L_Ident        reduce using rule 75
	L_integ        reduce using rule 75
	L_quoted       reduce using rule 75

	MulOp          goto state 101

State 54

	Expr3 -> Expr3 . AddOp Expr4                        (rule 74)
	Expr2 -> Expr3 .                                    (rule 77)

	'!'            reduce using rule 77
	'!='           reduce using rule 77
	'&&'           reduce using rule 77
	'('            reduce using rule 77
	')'            reduce using rule 77
	'+'            shift, and enter state 99
	','            reduce using rule 77
	'-'            shift, and enter state 100
			(reduce using rule 77)

	';'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	']'            reduce using rule 77
	'boolean'      reduce using rule 77
	'else'         reduce using rule 77
	'false'        reduce using rule 77
	'for'          reduce using rule 77
	'if'           reduce using rule 77
	'int'          reduce using rule 77
	'new'          reduce using rule 77
	'return'       reduce using rule 77
	'string'       reduce using rule 77
	'true'         reduce using rule 77
	'void'         reduce using rule 77
	'while'        reduce using rule 77
	'{'            reduce using rule 77
	'||'           reduce using rule 77
	'}'            reduce using rule 77
	L_Ident        reduce using rule 77
	L_integ        reduce using rule 77
	L_quoted       reduce using rule 77

	AddOp          goto state 98

State 55

	Expr2 -> Expr2 . RelOp Expr3                        (rule 76)
	Expr1 -> Expr2 . '&&' Expr1                         (rule 78)
	Expr1 -> Expr2 .                                    (rule 79)

	'!'            reduce using rule 79
	'!='           shift, and enter state 91
	'&&'           shift, and enter state 92
	'('            reduce using rule 79
	')'            reduce using rule 79
	','            reduce using rule 79
	'-'            reduce using rule 79
	';'            reduce using rule 79
	'<'            shift, and enter state 93
	'<='           shift, and enter state 94
	'=='           shift, and enter state 95
	'>'            shift, and enter state 96
	'>='           shift, and enter state 97
	']'            reduce using rule 79
	'boolean'      reduce using rule 79
	'else'         reduce using rule 79
	'false'        reduce using rule 79
	'for'          reduce using rule 79
	'if'           reduce using rule 79
	'int'          reduce using rule 79
	'new'          reduce using rule 79
	'return'       reduce using rule 79
	'string'       reduce using rule 79
	'true'         reduce using rule 79
	'void'         reduce using rule 79
	'while'        reduce using rule 79
	'{'            reduce using rule 79
	'||'           reduce using rule 79
	'}'            reduce using rule 79
	L_Ident        reduce using rule 79
	L_integ        reduce using rule 79
	L_quoted       reduce using rule 79

	RelOp          goto state 90

State 56

	Expr -> Expr1 . '||' Expr                           (rule 80)
	Expr -> Expr1 .                                     (rule 81)

	'!'            reduce using rule 81
	'('            reduce using rule 81
	')'            reduce using rule 81
	','            reduce using rule 81
	'-'            reduce using rule 81
	';'            reduce using rule 81
	']'            reduce using rule 81
	'boolean'      reduce using rule 81
	'else'         reduce using rule 81
	'false'        reduce using rule 81
	'for'          reduce using rule 81
	'if'           reduce using rule 81
	'int'          reduce using rule 81
	'new'          reduce using rule 81
	'return'       reduce using rule 81
	'string'       reduce using rule 81
	'true'         reduce using rule 81
	'void'         reduce using rule 81
	'while'        reduce using rule 81
	'{'            reduce using rule 81
	'||'           shift, and enter state 89
	'}'            reduce using rule 81
	L_Ident        reduce using rule 81
	L_integ        reduce using rule 81
	L_quoted       reduce using rule 81


State 57

	Stmt -> Expr . ';'                                  (rule 42)

	';'            shift, and enter state 88


State 58

	Expr5 -> '!' . Expr6                                (rule 70)

	'('            shift, and enter state 59
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 87

State 59

	Expr6 -> '(' . Type ')null'                         (rule 64)
	Expr6 -> '(' . Expr ')'                             (rule 68)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 84
	Integer        goto state 45
	String         goto state 46
	Type           goto state 85
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 86

State 60

	Expr5 -> '-' . Expr6                                (rule 69)

	'('            shift, and enter state 59
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 83

State 61

	Stmt -> ';' .                                       (rule 26)

	'!'            reduce using rule 26
	'('            reduce using rule 26
	'-'            reduce using rule 26
	';'            reduce using rule 26
	'boolean'      reduce using rule 26
	'else'         reduce using rule 26
	'false'        reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'int'          reduce using rule 26
	'new'          reduce using rule 26
	'return'       reduce using rule 26
	'string'       reduce using rule 26
	'true'         reduce using rule 26
	'void'         reduce using rule 26
	'while'        reduce using rule 26
	'{'            reduce using rule 26
	'}'            reduce using rule 26
	L_Ident        reduce using rule 26
	L_integ        reduce using rule 26
	L_quoted       reduce using rule 26


State 62

	Expr6 -> 'false' .                                  (rule 60)

	'!'            reduce using rule 60
	'!='           reduce using rule 60
	'%'            reduce using rule 60
	'&&'           reduce using rule 60
	'('            reduce using rule 60
	')'            reduce using rule 60
	'*'            reduce using rule 60
	'+'            reduce using rule 60
	','            reduce using rule 60
	'-'            reduce using rule 60
	'.'            reduce using rule 60
	'/'            reduce using rule 60
	';'            reduce using rule 60
	'<'            reduce using rule 60
	'<='           reduce using rule 60
	'=='           reduce using rule 60
	'>'            reduce using rule 60
	'>='           reduce using rule 60
	'['            reduce using rule 60
	']'            reduce using rule 60
	'boolean'      reduce using rule 60
	'else'         reduce using rule 60
	'false'        reduce using rule 60
	'for'          reduce using rule 60
	'if'           reduce using rule 60
	'int'          reduce using rule 60
	'new'          reduce using rule 60
	'return'       reduce using rule 60
	'string'       reduce using rule 60
	'true'         reduce using rule 60
	'void'         reduce using rule 60
	'while'        reduce using rule 60
	'{'            reduce using rule 60
	'||'           reduce using rule 60
	'}'            reduce using rule 60
	L_Ident        reduce using rule 60
	L_integ        reduce using rule 60
	L_quoted       reduce using rule 60


State 63

	Stmt -> 'for' . '(' Type Ident ':' Expr ')' Stmt    (rule 41)

	'('            shift, and enter state 82


State 64

	Stmt -> 'if' . '(' Expr ')' Stmt                    (rule 38)
	Stmt -> 'if' . '(' Expr ')' Stmt 'else' Stmt        (rule 39)

	'('            shift, and enter state 81


State 65

	Expr6 -> 'new' . Type                               (rule 65)
	Expr6 -> 'new' . Type '[' Expr ']'                  (rule 66)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 80

State 66

	Stmt -> 'return' . Expr ';'                         (rule 36)
	Stmt -> 'return' . ';'                              (rule 37)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 79
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 78

State 67

	Expr6 -> 'true' .                                   (rule 59)

	'!'            reduce using rule 59
	'!='           reduce using rule 59
	'%'            reduce using rule 59
	'&&'           reduce using rule 59
	'('            reduce using rule 59
	')'            reduce using rule 59
	'*'            reduce using rule 59
	'+'            reduce using rule 59
	','            reduce using rule 59
	'-'            reduce using rule 59
	'.'            reduce using rule 59
	'/'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'['            reduce using rule 59
	']'            reduce using rule 59
	'boolean'      reduce using rule 59
	'else'         reduce using rule 59
	'false'        reduce using rule 59
	'for'          reduce using rule 59
	'if'           reduce using rule 59
	'int'          reduce using rule 59
	'new'          reduce using rule 59
	'return'       reduce using rule 59
	'string'       reduce using rule 59
	'true'         reduce using rule 59
	'void'         reduce using rule 59
	'while'        reduce using rule 59
	'{'            reduce using rule 59
	'||'           reduce using rule 59
	'}'            reduce using rule 59
	L_Ident        reduce using rule 59
	L_integ        reduce using rule 59
	L_quoted       reduce using rule 59


State 68

	Stmt -> 'while' . '(' Expr ')' Stmt                 (rule 40)

	'('            shift, and enter state 75


State 69

	Integer -> L_integ .                                (rule 2)

	'!'            reduce using rule 2
	'!='           reduce using rule 2
	'%'            reduce using rule 2
	'&&'           reduce using rule 2
	'('            reduce using rule 2
	')'            reduce using rule 2
	'*'            reduce using rule 2
	'+'            reduce using rule 2
	','            reduce using rule 2
	'-'            reduce using rule 2
	'.'            reduce using rule 2
	'/'            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	'['            reduce using rule 2
	']'            reduce using rule 2
	'boolean'      reduce using rule 2
	'else'         reduce using rule 2
	'false'        reduce using rule 2
	'for'          reduce using rule 2
	'if'           reduce using rule 2
	'int'          reduce using rule 2
	'new'          reduce using rule 2
	'return'       reduce using rule 2
	'string'       reduce using rule 2
	'true'         reduce using rule 2
	'void'         reduce using rule 2
	'while'        reduce using rule 2
	'{'            reduce using rule 2
	'||'           reduce using rule 2
	'}'            reduce using rule 2
	L_Ident        reduce using rule 2
	L_integ        reduce using rule 2
	L_quoted       reduce using rule 2


State 70

	String -> L_quoted .                                (rule 3)

	'!'            reduce using rule 3
	'!='           reduce using rule 3
	'%'            reduce using rule 3
	'&&'           reduce using rule 3
	'('            reduce using rule 3
	')'            reduce using rule 3
	'*'            reduce using rule 3
	'+'            reduce using rule 3
	','            reduce using rule 3
	'-'            reduce using rule 3
	'.'            reduce using rule 3
	'/'            reduce using rule 3
	';'            reduce using rule 3
	'<'            reduce using rule 3
	'<='           reduce using rule 3
	'=='           reduce using rule 3
	'>'            reduce using rule 3
	'>='           reduce using rule 3
	'['            reduce using rule 3
	']'            reduce using rule 3
	'boolean'      reduce using rule 3
	'else'         reduce using rule 3
	'false'        reduce using rule 3
	'for'          reduce using rule 3
	'if'           reduce using rule 3
	'int'          reduce using rule 3
	'new'          reduce using rule 3
	'return'       reduce using rule 3
	'string'       reduce using rule 3
	'true'         reduce using rule 3
	'void'         reduce using rule 3
	'while'        reduce using rule 3
	'{'            reduce using rule 3
	'||'           reduce using rule 3
	'}'            reduce using rule 3
	L_Ident        reduce using rule 3
	L_integ        reduce using rule 3
	L_quoted       reduce using rule 3


State 71

	ClassStmt -> Type Ident '(' ListArg . ')' Block     (rule 19)

	')'            shift, and enter state 74


State 72

	ClassItem -> Ident .                                (rule 20)

	','            reduce using rule 20
	';'            reduce using rule 20


State 73

	ListClassItem -> ClassItem ',' ListClassItem .      (rule 22)

	';'            reduce using rule 22


State 74

	ClassStmt -> Type Ident '(' ListArg ')' . Block     (rule 19)

	'{'            shift, and enter state 43

	Block          goto state 140

State 75

	Stmt -> 'while' '(' . Expr ')' Stmt                 (rule 40)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 139

State 76

	Expr6 -> Ident .                                    (rule 56)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 61)

	'!'            reduce using rule 56
	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            shift, and enter state 112
			(reduce using rule 56)

	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	','            reduce using rule 56
	'-'            reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	']'            reduce using rule 56
	'boolean'      reduce using rule 56
	'else'         reduce using rule 56
	'false'        reduce using rule 56
	'for'          reduce using rule 56
	'if'           reduce using rule 56
	'int'          reduce using rule 56
	'new'          reduce using rule 56
	'return'       reduce using rule 56
	'string'       reduce using rule 56
	'true'         reduce using rule 56
	'void'         reduce using rule 56
	'while'        reduce using rule 56
	'{'            reduce using rule 56
	'||'           reduce using rule 56
	'}'            reduce using rule 56
	L_Ident        reduce using rule 56
	L_integ        reduce using rule 56
	L_quoted       reduce using rule 56


State 77

	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 . '.' Ident                          (rule 63)
	Expr5 -> Expr6 .                                    (rule 71)

	'!'            reduce using rule 71
	'!='           reduce using rule 71
	'%'            reduce using rule 71
	'&&'           reduce using rule 71
	'('            reduce using rule 71
	')'            reduce using rule 71
	'*'            reduce using rule 71
	'+'            reduce using rule 71
	','            reduce using rule 71
	'-'            reduce using rule 71
	'.'            shift, and enter state 131
	'/'            reduce using rule 71
	';'            reduce using rule 71
	'<'            reduce using rule 71
	'<='           reduce using rule 71
	'=='           reduce using rule 71
	'>'            reduce using rule 71
	'>='           reduce using rule 71
	'['            shift, and enter state 132
	']'            reduce using rule 71
	'boolean'      reduce using rule 71
	'else'         reduce using rule 71
	'false'        reduce using rule 71
	'for'          reduce using rule 71
	'if'           reduce using rule 71
	'int'          reduce using rule 71
	'new'          reduce using rule 71
	'return'       reduce using rule 71
	'string'       reduce using rule 71
	'true'         reduce using rule 71
	'void'         reduce using rule 71
	'while'        reduce using rule 71
	'{'            reduce using rule 71
	'||'           reduce using rule 71
	'}'            reduce using rule 71
	L_Ident        reduce using rule 71
	L_integ        reduce using rule 71
	L_quoted       reduce using rule 71


State 78

	Stmt -> 'return' Expr . ';'                         (rule 36)

	';'            shift, and enter state 138


State 79

	Stmt -> 'return' ';' .                              (rule 37)

	'!'            reduce using rule 37
	'('            reduce using rule 37
	'-'            reduce using rule 37
	';'            reduce using rule 37
	'boolean'      reduce using rule 37
	'else'         reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'int'          reduce using rule 37
	'new'          reduce using rule 37
	'return'       reduce using rule 37
	'string'       reduce using rule 37
	'true'         reduce using rule 37
	'void'         reduce using rule 37
	'while'        reduce using rule 37
	'{'            reduce using rule 37
	'}'            reduce using rule 37
	L_Ident        reduce using rule 37
	L_integ        reduce using rule 37
	L_quoted       reduce using rule 37


State 80

	Type -> Type . '[]'                                 (rule 51)
	Expr6 -> 'new' Type .                               (rule 65)
	Expr6 -> 'new' Type . '[' Expr ']'                  (rule 66)

	'!'            reduce using rule 65
	'!='           reduce using rule 65
	'%'            reduce using rule 65
	'&&'           reduce using rule 65
	'('            reduce using rule 65
	')'            reduce using rule 65
	'*'            reduce using rule 65
	'+'            reduce using rule 65
	','            reduce using rule 65
	'-'            reduce using rule 65
	'.'            reduce using rule 65
	'/'            reduce using rule 65
	';'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'['            shift, and enter state 137
			(reduce using rule 65)

	'[]'           shift, and enter state 15
	']'            reduce using rule 65
	'boolean'      reduce using rule 65
	'else'         reduce using rule 65
	'false'        reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'int'          reduce using rule 65
	'new'          reduce using rule 65
	'return'       reduce using rule 65
	'string'       reduce using rule 65
	'true'         reduce using rule 65
	'void'         reduce using rule 65
	'while'        reduce using rule 65
	'{'            reduce using rule 65
	'||'           reduce using rule 65
	'}'            reduce using rule 65
	L_Ident        reduce using rule 65
	L_integ        reduce using rule 65
	L_quoted       reduce using rule 65


State 81

	Stmt -> 'if' '(' . Expr ')' Stmt                    (rule 38)
	Stmt -> 'if' '(' . Expr ')' Stmt 'else' Stmt        (rule 39)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 136

State 82

	Stmt -> 'for' '(' . Type Ident ':' Expr ')' Stmt    (rule 41)

	'boolean'      shift, and enter state 8
	'int'          shift, and enter state 10
	'string'       shift, and enter state 11
	'void'         shift, and enter state 12
	L_Ident        shift, and enter state 2

	Ident          goto state 3
	Type           goto state 135

State 83

	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 . '.' Ident                          (rule 63)
	Expr5 -> '-' Expr6 .                                (rule 69)

	'!'            reduce using rule 69
	'!='           reduce using rule 69
	'%'            reduce using rule 69
	'&&'           reduce using rule 69
	'('            reduce using rule 69
	')'            reduce using rule 69
	'*'            reduce using rule 69
	'+'            reduce using rule 69
	','            reduce using rule 69
	'-'            reduce using rule 69
	'.'            shift, and enter state 131
	'/'            reduce using rule 69
	';'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'['            shift, and enter state 132
	']'            reduce using rule 69
	'boolean'      reduce using rule 69
	'else'         reduce using rule 69
	'false'        reduce using rule 69
	'for'          reduce using rule 69
	'if'           reduce using rule 69
	'int'          reduce using rule 69
	'new'          reduce using rule 69
	'return'       reduce using rule 69
	'string'       reduce using rule 69
	'true'         reduce using rule 69
	'void'         reduce using rule 69
	'while'        reduce using rule 69
	'{'            reduce using rule 69
	'||'           reduce using rule 69
	'}'            reduce using rule 69
	L_Ident        reduce using rule 69
	L_integ        reduce using rule 69
	L_quoted       reduce using rule 69


State 84

	Type -> Ident .                                     (rule 52)
	Expr6 -> Ident .                                    (rule 56)
	Expr6 -> Ident . '(' ListExpr ')'                   (rule 61)

	'!='           reduce using rule 56
	'%'            reduce using rule 56
	'&&'           reduce using rule 56
	'('            shift, and enter state 112
	')'            reduce using rule 56
	')null'        reduce using rule 52
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'.'            reduce using rule 56
	'/'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'['            reduce using rule 56
	'[]'           reduce using rule 52
	'||'           reduce using rule 56


State 85

	Type -> Type . '[]'                                 (rule 51)
	Expr6 -> '(' Type . ')null'                         (rule 64)

	')null'        shift, and enter state 134
	'[]'           shift, and enter state 15


State 86

	Expr6 -> '(' Expr . ')'                             (rule 68)

	')'            shift, and enter state 133


State 87

	Expr6 -> Expr6 . '[' Expr ']'                       (rule 57)
	Expr6 -> Expr6 . '.' Ident '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 . '.' Ident                          (rule 63)
	Expr5 -> '!' Expr6 .                                (rule 70)

	'!'            reduce using rule 70
	'!='           reduce using rule 70
	'%'            reduce using rule 70
	'&&'           reduce using rule 70
	'('            reduce using rule 70
	')'            reduce using rule 70
	'*'            reduce using rule 70
	'+'            reduce using rule 70
	','            reduce using rule 70
	'-'            reduce using rule 70
	'.'            shift, and enter state 131
	'/'            reduce using rule 70
	';'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'['            shift, and enter state 132
	']'            reduce using rule 70
	'boolean'      reduce using rule 70
	'else'         reduce using rule 70
	'false'        reduce using rule 70
	'for'          reduce using rule 70
	'if'           reduce using rule 70
	'int'          reduce using rule 70
	'new'          reduce using rule 70
	'return'       reduce using rule 70
	'string'       reduce using rule 70
	'true'         reduce using rule 70
	'void'         reduce using rule 70
	'while'        reduce using rule 70
	'{'            reduce using rule 70
	'||'           reduce using rule 70
	'}'            reduce using rule 70
	L_Ident        reduce using rule 70
	L_integ        reduce using rule 70
	L_quoted       reduce using rule 70


State 88

	Stmt -> Expr ';' .                                  (rule 42)

	'!'            reduce using rule 42
	'('            reduce using rule 42
	'-'            reduce using rule 42
	';'            reduce using rule 42
	'boolean'      reduce using rule 42
	'else'         reduce using rule 42
	'false'        reduce using rule 42
	'for'          reduce using rule 42
	'if'           reduce using rule 42
	'int'          reduce using rule 42
	'new'          reduce using rule 42
	'return'       reduce using rule 42
	'string'       reduce using rule 42
	'true'         reduce using rule 42
	'void'         reduce using rule 42
	'while'        reduce using rule 42
	'{'            reduce using rule 42
	'}'            reduce using rule 42
	L_Ident        reduce using rule 42
	L_integ        reduce using rule 42
	L_quoted       reduce using rule 42


State 89

	Expr -> Expr1 '||' . Expr                           (rule 80)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 130

State 90

	Expr2 -> Expr2 RelOp . Expr3                        (rule 76)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 129

State 91

	RelOp -> '!=' .                                     (rule 95)

	'!'            reduce using rule 95
	'('            reduce using rule 95
	'-'            reduce using rule 95
	'false'        reduce using rule 95
	'new'          reduce using rule 95
	'true'         reduce using rule 95
	L_Ident        reduce using rule 95
	L_integ        reduce using rule 95
	L_quoted       reduce using rule 95


State 92

	Expr1 -> Expr2 '&&' . Expr1                         (rule 78)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 128

State 93

	RelOp -> '<' .                                      (rule 90)

	'!'            reduce using rule 90
	'('            reduce using rule 90
	'-'            reduce using rule 90
	'false'        reduce using rule 90
	'new'          reduce using rule 90
	'true'         reduce using rule 90
	L_Ident        reduce using rule 90
	L_integ        reduce using rule 90
	L_quoted       reduce using rule 90


State 94

	RelOp -> '<=' .                                     (rule 91)

	'!'            reduce using rule 91
	'('            reduce using rule 91
	'-'            reduce using rule 91
	'false'        reduce using rule 91
	'new'          reduce using rule 91
	'true'         reduce using rule 91
	L_Ident        reduce using rule 91
	L_integ        reduce using rule 91
	L_quoted       reduce using rule 91


State 95

	RelOp -> '==' .                                     (rule 94)

	'!'            reduce using rule 94
	'('            reduce using rule 94
	'-'            reduce using rule 94
	'false'        reduce using rule 94
	'new'          reduce using rule 94
	'true'         reduce using rule 94
	L_Ident        reduce using rule 94
	L_integ        reduce using rule 94
	L_quoted       reduce using rule 94


State 96

	RelOp -> '>' .                                      (rule 92)

	'!'            reduce using rule 92
	'('            reduce using rule 92
	'-'            reduce using rule 92
	'false'        reduce using rule 92
	'new'          reduce using rule 92
	'true'         reduce using rule 92
	L_Ident        reduce using rule 92
	L_integ        reduce using rule 92
	L_quoted       reduce using rule 92


State 97

	RelOp -> '>=' .                                     (rule 93)

	'!'            reduce using rule 93
	'('            reduce using rule 93
	'-'            reduce using rule 93
	'false'        reduce using rule 93
	'new'          reduce using rule 93
	'true'         reduce using rule 93
	L_Ident        reduce using rule 93
	L_integ        reduce using rule 93
	L_quoted       reduce using rule 93


State 98

	Expr3 -> Expr3 AddOp . Expr4                        (rule 74)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 127

State 99

	AddOp -> '+' .                                      (rule 85)

	'!'            reduce using rule 85
	'('            reduce using rule 85
	'-'            reduce using rule 85
	'false'        reduce using rule 85
	'new'          reduce using rule 85
	'true'         reduce using rule 85
	L_Ident        reduce using rule 85
	L_integ        reduce using rule 85
	L_quoted       reduce using rule 85


State 100

	AddOp -> '-' .                                      (rule 86)

	'!'            reduce using rule 86
	'('            reduce using rule 86
	'-'            reduce using rule 86
	'false'        reduce using rule 86
	'new'          reduce using rule 86
	'true'         reduce using rule 86
	L_Ident        reduce using rule 86
	L_integ        reduce using rule 86
	L_quoted       reduce using rule 86


State 101

	Expr4 -> Expr4 MulOp . Expr5                        (rule 72)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 126

State 102

	MulOp -> '%' .                                      (rule 89)

	'!'            reduce using rule 89
	'('            reduce using rule 89
	'-'            reduce using rule 89
	'false'        reduce using rule 89
	'new'          reduce using rule 89
	'true'         reduce using rule 89
	L_Ident        reduce using rule 89
	L_integ        reduce using rule 89
	L_quoted       reduce using rule 89


State 103

	MulOp -> '*' .                                      (rule 87)

	'!'            reduce using rule 87
	'('            reduce using rule 87
	'-'            reduce using rule 87
	'false'        reduce using rule 87
	'new'          reduce using rule 87
	'true'         reduce using rule 87
	L_Ident        reduce using rule 87
	L_integ        reduce using rule 87
	L_quoted       reduce using rule 87


State 104

	MulOp -> '/' .                                      (rule 88)

	'!'            reduce using rule 88
	'('            reduce using rule 88
	'-'            reduce using rule 88
	'false'        reduce using rule 88
	'new'          reduce using rule 88
	'true'         reduce using rule 88
	L_Ident        reduce using rule 88
	L_integ        reduce using rule 88
	L_quoted       reduce using rule 88


State 105

	Stmt -> Expr6 '.' . Ident '=' Expr                  (rule 31)
	Stmt -> Expr6 '.' . Ident '++' ';'                  (rule 33)
	Stmt -> Expr6 '.' . Ident '--' ';'                  (rule 34)
	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 '.' . Ident                          (rule 63)

	L_Ident        shift, and enter state 2

	Ident          goto state 125

State 106

	Stmt -> Expr6 '[' . Expr ']' '=' Expr ';'           (rule 30)
	Expr6 -> Expr6 '[' . Expr ']'                       (rule 57)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 124

State 107

	Item -> Ident .                                     (rule 43)
	Item -> Ident . '=' Expr                            (rule 44)

	','            reduce using rule 43
	';'            reduce using rule 43
	'='            shift, and enter state 123


State 108

	ListItem -> Item .                                  (rule 45)
	ListItem -> Item . ',' ListItem                     (rule 46)

	','            shift, and enter state 122
	';'            reduce using rule 45


State 109

	Stmt -> Type ListItem . ';'                         (rule 28)

	';'            shift, and enter state 121


State 110

	ListStmt -> Stmt ListStmt .                         (rule 25)

	'}'            reduce using rule 25


State 111

	Block -> '{' ListStmt '}' .                         (rule 23)

	'!'            reduce using rule 23
	'('            reduce using rule 23
	'-'            reduce using rule 23
	';'            reduce using rule 23
	'boolean'      reduce using rule 23
	'class'        reduce using rule 23
	'else'         reduce using rule 23
	'false'        reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'int'          reduce using rule 23
	'new'          reduce using rule 23
	'return'       reduce using rule 23
	'string'       reduce using rule 23
	'true'         reduce using rule 23
	'void'         reduce using rule 23
	'while'        reduce using rule 23
	'{'            reduce using rule 23
	'}'            reduce using rule 23
	L_Ident        reduce using rule 23
	L_integ        reduce using rule 23
	L_quoted       reduce using rule 23
	%eof           reduce using rule 23


State 112

	Expr6 -> Ident '(' . ListExpr ')'                   (rule 61)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 82
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 119
	ListExpr       goto state 120

State 113

	Stmt -> Ident '++' . ';'                            (rule 32)

	';'            shift, and enter state 118


State 114

	Stmt -> Ident '--' . ';'                            (rule 35)

	';'            shift, and enter state 117


State 115

	Stmt -> Ident '=' . Expr ';'                        (rule 29)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 116

State 116

	Stmt -> Ident '=' Expr . ';'                        (rule 29)

	';'            shift, and enter state 156


State 117

	Stmt -> Ident '--' ';' .                            (rule 35)

	'!'            reduce using rule 35
	'('            reduce using rule 35
	'-'            reduce using rule 35
	';'            reduce using rule 35
	'boolean'      reduce using rule 35
	'else'         reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'int'          reduce using rule 35
	'new'          reduce using rule 35
	'return'       reduce using rule 35
	'string'       reduce using rule 35
	'true'         reduce using rule 35
	'void'         reduce using rule 35
	'while'        reduce using rule 35
	'{'            reduce using rule 35
	'}'            reduce using rule 35
	L_Ident        reduce using rule 35
	L_integ        reduce using rule 35
	L_quoted       reduce using rule 35


State 118

	Stmt -> Ident '++' ';' .                            (rule 32)

	'!'            reduce using rule 32
	'('            reduce using rule 32
	'-'            reduce using rule 32
	';'            reduce using rule 32
	'boolean'      reduce using rule 32
	'else'         reduce using rule 32
	'false'        reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'int'          reduce using rule 32
	'new'          reduce using rule 32
	'return'       reduce using rule 32
	'string'       reduce using rule 32
	'true'         reduce using rule 32
	'void'         reduce using rule 32
	'while'        reduce using rule 32
	'{'            reduce using rule 32
	'}'            reduce using rule 32
	L_Ident        reduce using rule 32
	L_integ        reduce using rule 32
	L_quoted       reduce using rule 32


State 119

	ListExpr -> Expr .                                  (rule 83)
	ListExpr -> Expr . ',' ListExpr                     (rule 84)

	')'            reduce using rule 83
	','            shift, and enter state 155


State 120

	Expr6 -> Ident '(' ListExpr . ')'                   (rule 61)

	')'            shift, and enter state 154


State 121

	Stmt -> Type ListItem ';' .                         (rule 28)

	'!'            reduce using rule 28
	'('            reduce using rule 28
	'-'            reduce using rule 28
	';'            reduce using rule 28
	'boolean'      reduce using rule 28
	'else'         reduce using rule 28
	'false'        reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'int'          reduce using rule 28
	'new'          reduce using rule 28
	'return'       reduce using rule 28
	'string'       reduce using rule 28
	'true'         reduce using rule 28
	'void'         reduce using rule 28
	'while'        reduce using rule 28
	'{'            reduce using rule 28
	'}'            reduce using rule 28
	L_Ident        reduce using rule 28
	L_integ        reduce using rule 28
	L_quoted       reduce using rule 28


State 122

	ListItem -> Item ',' . ListItem                     (rule 46)

	L_Ident        shift, and enter state 2

	Ident          goto state 107
	Item           goto state 108
	ListItem       goto state 153

State 123

	Item -> Ident '=' . Expr                            (rule 44)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 152

State 124

	Stmt -> Expr6 '[' Expr . ']' '=' Expr ';'           (rule 30)
	Expr6 -> Expr6 '[' Expr . ']'                       (rule 57)

	']'            shift, and enter state 151


State 125

	Stmt -> Expr6 '.' Ident . '=' Expr                  (rule 31)
	Stmt -> Expr6 '.' Ident . '++' ';'                  (rule 33)
	Stmt -> Expr6 '.' Ident . '--' ';'                  (rule 34)
	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 '.' Ident .                          (rule 63)

	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            shift, and enter state 147
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	'++'           shift, and enter state 148
	'-'            reduce using rule 63
	'--'           shift, and enter state 149
	'.'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'='            shift, and enter state 150
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            reduce using rule 63
	'||'           reduce using rule 63


State 126

	Expr4 -> Expr4 MulOp Expr5 .                        (rule 72)

	'!'            reduce using rule 72
	'!='           reduce using rule 72
	'%'            reduce using rule 72
	'&&'           reduce using rule 72
	'('            reduce using rule 72
	')'            reduce using rule 72
	'*'            reduce using rule 72
	'+'            reduce using rule 72
	','            reduce using rule 72
	'-'            reduce using rule 72
	'/'            reduce using rule 72
	';'            reduce using rule 72
	'<'            reduce using rule 72
	'<='           reduce using rule 72
	'=='           reduce using rule 72
	'>'            reduce using rule 72
	'>='           reduce using rule 72
	']'            reduce using rule 72
	'boolean'      reduce using rule 72
	'else'         reduce using rule 72
	'false'        reduce using rule 72
	'for'          reduce using rule 72
	'if'           reduce using rule 72
	'int'          reduce using rule 72
	'new'          reduce using rule 72
	'return'       reduce using rule 72
	'string'       reduce using rule 72
	'true'         reduce using rule 72
	'void'         reduce using rule 72
	'while'        reduce using rule 72
	'{'            reduce using rule 72
	'||'           reduce using rule 72
	'}'            reduce using rule 72
	L_Ident        reduce using rule 72
	L_integ        reduce using rule 72
	L_quoted       reduce using rule 72


State 127

	Expr4 -> Expr4 . MulOp Expr5                        (rule 72)
	Expr3 -> Expr3 AddOp Expr4 .                        (rule 74)

	'!'            reduce using rule 74
	'!='           reduce using rule 74
	'%'            shift, and enter state 102
	'&&'           reduce using rule 74
	'('            reduce using rule 74
	')'            reduce using rule 74
	'*'            shift, and enter state 103
	'+'            reduce using rule 74
	','            reduce using rule 74
	'-'            reduce using rule 74
	'/'            shift, and enter state 104
	';'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	']'            reduce using rule 74
	'boolean'      reduce using rule 74
	'else'         reduce using rule 74
	'false'        reduce using rule 74
	'for'          reduce using rule 74
	'if'           reduce using rule 74
	'int'          reduce using rule 74
	'new'          reduce using rule 74
	'return'       reduce using rule 74
	'string'       reduce using rule 74
	'true'         reduce using rule 74
	'void'         reduce using rule 74
	'while'        reduce using rule 74
	'{'            reduce using rule 74
	'||'           reduce using rule 74
	'}'            reduce using rule 74
	L_Ident        reduce using rule 74
	L_integ        reduce using rule 74
	L_quoted       reduce using rule 74

	MulOp          goto state 101

State 128

	Expr1 -> Expr2 '&&' Expr1 .                         (rule 78)

	'!'            reduce using rule 78
	'('            reduce using rule 78
	')'            reduce using rule 78
	','            reduce using rule 78
	'-'            reduce using rule 78
	';'            reduce using rule 78
	']'            reduce using rule 78
	'boolean'      reduce using rule 78
	'else'         reduce using rule 78
	'false'        reduce using rule 78
	'for'          reduce using rule 78
	'if'           reduce using rule 78
	'int'          reduce using rule 78
	'new'          reduce using rule 78
	'return'       reduce using rule 78
	'string'       reduce using rule 78
	'true'         reduce using rule 78
	'void'         reduce using rule 78
	'while'        reduce using rule 78
	'{'            reduce using rule 78
	'||'           reduce using rule 78
	'}'            reduce using rule 78
	L_Ident        reduce using rule 78
	L_integ        reduce using rule 78
	L_quoted       reduce using rule 78


State 129

	Expr3 -> Expr3 . AddOp Expr4                        (rule 74)
	Expr2 -> Expr2 RelOp Expr3 .                        (rule 76)

	'!'            reduce using rule 76
	'!='           reduce using rule 76
	'&&'           reduce using rule 76
	'('            reduce using rule 76
	')'            reduce using rule 76
	'+'            shift, and enter state 99
	','            reduce using rule 76
	'-'            shift, and enter state 100
			(reduce using rule 76)

	';'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	']'            reduce using rule 76
	'boolean'      reduce using rule 76
	'else'         reduce using rule 76
	'false'        reduce using rule 76
	'for'          reduce using rule 76
	'if'           reduce using rule 76
	'int'          reduce using rule 76
	'new'          reduce using rule 76
	'return'       reduce using rule 76
	'string'       reduce using rule 76
	'true'         reduce using rule 76
	'void'         reduce using rule 76
	'while'        reduce using rule 76
	'{'            reduce using rule 76
	'||'           reduce using rule 76
	'}'            reduce using rule 76
	L_Ident        reduce using rule 76
	L_integ        reduce using rule 76
	L_quoted       reduce using rule 76

	AddOp          goto state 98

State 130

	Expr -> Expr1 '||' Expr .                           (rule 80)

	'!'            reduce using rule 80
	'('            reduce using rule 80
	')'            reduce using rule 80
	','            reduce using rule 80
	'-'            reduce using rule 80
	';'            reduce using rule 80
	']'            reduce using rule 80
	'boolean'      reduce using rule 80
	'else'         reduce using rule 80
	'false'        reduce using rule 80
	'for'          reduce using rule 80
	'if'           reduce using rule 80
	'int'          reduce using rule 80
	'new'          reduce using rule 80
	'return'       reduce using rule 80
	'string'       reduce using rule 80
	'true'         reduce using rule 80
	'void'         reduce using rule 80
	'while'        reduce using rule 80
	'{'            reduce using rule 80
	'}'            reduce using rule 80
	L_Ident        reduce using rule 80
	L_integ        reduce using rule 80
	L_quoted       reduce using rule 80


State 131

	Expr6 -> Expr6 '.' . Ident '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 '.' . Ident                          (rule 63)

	L_Ident        shift, and enter state 2

	Ident          goto state 146

State 132

	Expr6 -> Expr6 '[' . Expr ']'                       (rule 57)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 145

State 133

	Expr6 -> '(' Expr ')' .                             (rule 68)

	'!'            reduce using rule 68
	'!='           reduce using rule 68
	'%'            reduce using rule 68
	'&&'           reduce using rule 68
	'('            reduce using rule 68
	')'            reduce using rule 68
	'*'            reduce using rule 68
	'+'            reduce using rule 68
	','            reduce using rule 68
	'-'            reduce using rule 68
	'.'            reduce using rule 68
	'/'            reduce using rule 68
	';'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'['            reduce using rule 68
	']'            reduce using rule 68
	'boolean'      reduce using rule 68
	'else'         reduce using rule 68
	'false'        reduce using rule 68
	'for'          reduce using rule 68
	'if'           reduce using rule 68
	'int'          reduce using rule 68
	'new'          reduce using rule 68
	'return'       reduce using rule 68
	'string'       reduce using rule 68
	'true'         reduce using rule 68
	'void'         reduce using rule 68
	'while'        reduce using rule 68
	'{'            reduce using rule 68
	'||'           reduce using rule 68
	'}'            reduce using rule 68
	L_Ident        reduce using rule 68
	L_integ        reduce using rule 68
	L_quoted       reduce using rule 68


State 134

	Expr6 -> '(' Type ')null' .                         (rule 64)

	'!'            reduce using rule 64
	'!='           reduce using rule 64
	'%'            reduce using rule 64
	'&&'           reduce using rule 64
	'('            reduce using rule 64
	')'            reduce using rule 64
	'*'            reduce using rule 64
	'+'            reduce using rule 64
	','            reduce using rule 64
	'-'            reduce using rule 64
	'.'            reduce using rule 64
	'/'            reduce using rule 64
	';'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'['            reduce using rule 64
	']'            reduce using rule 64
	'boolean'      reduce using rule 64
	'else'         reduce using rule 64
	'false'        reduce using rule 64
	'for'          reduce using rule 64
	'if'           reduce using rule 64
	'int'          reduce using rule 64
	'new'          reduce using rule 64
	'return'       reduce using rule 64
	'string'       reduce using rule 64
	'true'         reduce using rule 64
	'void'         reduce using rule 64
	'while'        reduce using rule 64
	'{'            reduce using rule 64
	'||'           reduce using rule 64
	'}'            reduce using rule 64
	L_Ident        reduce using rule 64
	L_integ        reduce using rule 64
	L_quoted       reduce using rule 64


State 135

	Stmt -> 'for' '(' Type . Ident ':' Expr ')' Stmt    (rule 41)
	Type -> Type . '[]'                                 (rule 51)

	'[]'           shift, and enter state 15
	L_Ident        shift, and enter state 2

	Ident          goto state 144

State 136

	Stmt -> 'if' '(' Expr . ')' Stmt                    (rule 38)
	Stmt -> 'if' '(' Expr . ')' Stmt 'else' Stmt        (rule 39)

	')'            shift, and enter state 143


State 137

	Expr6 -> 'new' Type '[' . Expr ']'                  (rule 66)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 142

State 138

	Stmt -> 'return' Expr ';' .                         (rule 36)

	'!'            reduce using rule 36
	'('            reduce using rule 36
	'-'            reduce using rule 36
	';'            reduce using rule 36
	'boolean'      reduce using rule 36
	'else'         reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'int'          reduce using rule 36
	'new'          reduce using rule 36
	'return'       reduce using rule 36
	'string'       reduce using rule 36
	'true'         reduce using rule 36
	'void'         reduce using rule 36
	'while'        reduce using rule 36
	'{'            reduce using rule 36
	'}'            reduce using rule 36
	L_Ident        reduce using rule 36
	L_integ        reduce using rule 36
	L_quoted       reduce using rule 36


State 139

	Stmt -> 'while' '(' Expr . ')' Stmt                 (rule 40)

	')'            shift, and enter state 141


State 140

	ClassStmt -> Type Ident '(' ListArg ')' Block .     (rule 19)

	';'            reduce using rule 19
	'boolean'      reduce using rule 19
	'int'          reduce using rule 19
	'string'       reduce using rule 19
	'void'         reduce using rule 19
	'}'            reduce using rule 19
	L_Ident        reduce using rule 19


State 141

	Stmt -> 'while' '(' Expr ')' . Stmt                 (rule 40)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 167
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 142

	Expr6 -> 'new' Type '[' Expr . ']'                  (rule 66)

	']'            shift, and enter state 166


State 143

	Stmt -> 'if' '(' Expr ')' . Stmt                    (rule 38)
	Stmt -> 'if' '(' Expr ')' . Stmt 'else' Stmt        (rule 39)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 165
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 144

	Stmt -> 'for' '(' Type Ident . ':' Expr ')' Stmt    (rule 41)

	':'            shift, and enter state 164


State 145

	Expr6 -> Expr6 '[' Expr . ']'                       (rule 57)

	']'            shift, and enter state 163


State 146

	Expr6 -> Expr6 '.' Ident . '(' ListExpr ')'         (rule 62)
	Expr6 -> Expr6 '.' Ident .                          (rule 63)

	'!'            reduce using rule 63
	'!='           reduce using rule 63
	'%'            reduce using rule 63
	'&&'           reduce using rule 63
	'('            shift, and enter state 147
			(reduce using rule 63)

	')'            reduce using rule 63
	'*'            reduce using rule 63
	'+'            reduce using rule 63
	','            reduce using rule 63
	'-'            reduce using rule 63
	'.'            reduce using rule 63
	'/'            reduce using rule 63
	';'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'['            reduce using rule 63
	']'            reduce using rule 63
	'boolean'      reduce using rule 63
	'else'         reduce using rule 63
	'false'        reduce using rule 63
	'for'          reduce using rule 63
	'if'           reduce using rule 63
	'int'          reduce using rule 63
	'new'          reduce using rule 63
	'return'       reduce using rule 63
	'string'       reduce using rule 63
	'true'         reduce using rule 63
	'void'         reduce using rule 63
	'while'        reduce using rule 63
	'{'            reduce using rule 63
	'||'           reduce using rule 63
	'}'            reduce using rule 63
	L_Ident        reduce using rule 63
	L_integ        reduce using rule 63
	L_quoted       reduce using rule 63


State 147

	Expr6 -> Expr6 '.' Ident '(' . ListExpr ')'         (rule 62)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 82
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 119
	ListExpr       goto state 162

State 148

	Stmt -> Expr6 '.' Ident '++' . ';'                  (rule 33)

	';'            shift, and enter state 161


State 149

	Stmt -> Expr6 '.' Ident '--' . ';'                  (rule 34)

	';'            shift, and enter state 160


State 150

	Stmt -> Expr6 '.' Ident '=' . Expr                  (rule 31)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 159

State 151

	Stmt -> Expr6 '[' Expr ']' . '=' Expr ';'           (rule 30)
	Expr6 -> Expr6 '[' Expr ']' .                       (rule 57)

	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'='            shift, and enter state 158
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	'||'           reduce using rule 57


State 152

	Item -> Ident '=' Expr .                            (rule 44)

	','            reduce using rule 44
	';'            reduce using rule 44


State 153

	ListItem -> Item ',' ListItem .                     (rule 46)

	';'            reduce using rule 46


State 154

	Expr6 -> Ident '(' ListExpr ')' .                   (rule 61)

	'!'            reduce using rule 61
	'!='           reduce using rule 61
	'%'            reduce using rule 61
	'&&'           reduce using rule 61
	'('            reduce using rule 61
	')'            reduce using rule 61
	'*'            reduce using rule 61
	'+'            reduce using rule 61
	','            reduce using rule 61
	'-'            reduce using rule 61
	'.'            reduce using rule 61
	'/'            reduce using rule 61
	';'            reduce using rule 61
	'<'            reduce using rule 61
	'<='           reduce using rule 61
	'=='           reduce using rule 61
	'>'            reduce using rule 61
	'>='           reduce using rule 61
	'['            reduce using rule 61
	']'            reduce using rule 61
	'boolean'      reduce using rule 61
	'else'         reduce using rule 61
	'false'        reduce using rule 61
	'for'          reduce using rule 61
	'if'           reduce using rule 61
	'int'          reduce using rule 61
	'new'          reduce using rule 61
	'return'       reduce using rule 61
	'string'       reduce using rule 61
	'true'         reduce using rule 61
	'void'         reduce using rule 61
	'while'        reduce using rule 61
	'{'            reduce using rule 61
	'||'           reduce using rule 61
	'}'            reduce using rule 61
	L_Ident        reduce using rule 61
	L_integ        reduce using rule 61
	L_quoted       reduce using rule 61


State 155

	ListExpr -> Expr ',' . ListExpr                     (rule 84)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	')'            reduce using rule 82
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 119
	ListExpr       goto state 157

State 156

	Stmt -> Ident '=' Expr ';' .                        (rule 29)

	'!'            reduce using rule 29
	'('            reduce using rule 29
	'-'            reduce using rule 29
	';'            reduce using rule 29
	'boolean'      reduce using rule 29
	'else'         reduce using rule 29
	'false'        reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'int'          reduce using rule 29
	'new'          reduce using rule 29
	'return'       reduce using rule 29
	'string'       reduce using rule 29
	'true'         reduce using rule 29
	'void'         reduce using rule 29
	'while'        reduce using rule 29
	'{'            reduce using rule 29
	'}'            reduce using rule 29
	L_Ident        reduce using rule 29
	L_integ        reduce using rule 29
	L_quoted       reduce using rule 29


State 157

	ListExpr -> Expr ',' ListExpr .                     (rule 84)

	')'            reduce using rule 84


State 158

	Stmt -> Expr6 '[' Expr ']' '=' . Expr ';'           (rule 30)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 171

State 159

	Stmt -> Expr6 '.' Ident '=' Expr .                  (rule 31)

	'!'            reduce using rule 31
	'('            reduce using rule 31
	'-'            reduce using rule 31
	';'            reduce using rule 31
	'boolean'      reduce using rule 31
	'else'         reduce using rule 31
	'false'        reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'int'          reduce using rule 31
	'new'          reduce using rule 31
	'return'       reduce using rule 31
	'string'       reduce using rule 31
	'true'         reduce using rule 31
	'void'         reduce using rule 31
	'while'        reduce using rule 31
	'{'            reduce using rule 31
	'}'            reduce using rule 31
	L_Ident        reduce using rule 31
	L_integ        reduce using rule 31
	L_quoted       reduce using rule 31


State 160

	Stmt -> Expr6 '.' Ident '--' ';' .                  (rule 34)

	'!'            reduce using rule 34
	'('            reduce using rule 34
	'-'            reduce using rule 34
	';'            reduce using rule 34
	'boolean'      reduce using rule 34
	'else'         reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'int'          reduce using rule 34
	'new'          reduce using rule 34
	'return'       reduce using rule 34
	'string'       reduce using rule 34
	'true'         reduce using rule 34
	'void'         reduce using rule 34
	'while'        reduce using rule 34
	'{'            reduce using rule 34
	'}'            reduce using rule 34
	L_Ident        reduce using rule 34
	L_integ        reduce using rule 34
	L_quoted       reduce using rule 34


State 161

	Stmt -> Expr6 '.' Ident '++' ';' .                  (rule 33)

	'!'            reduce using rule 33
	'('            reduce using rule 33
	'-'            reduce using rule 33
	';'            reduce using rule 33
	'boolean'      reduce using rule 33
	'else'         reduce using rule 33
	'false'        reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'int'          reduce using rule 33
	'new'          reduce using rule 33
	'return'       reduce using rule 33
	'string'       reduce using rule 33
	'true'         reduce using rule 33
	'void'         reduce using rule 33
	'while'        reduce using rule 33
	'{'            reduce using rule 33
	'}'            reduce using rule 33
	L_Ident        reduce using rule 33
	L_integ        reduce using rule 33
	L_quoted       reduce using rule 33


State 162

	Expr6 -> Expr6 '.' Ident '(' ListExpr . ')'         (rule 62)

	')'            shift, and enter state 170


State 163

	Expr6 -> Expr6 '[' Expr ']' .                       (rule 57)

	'!'            reduce using rule 57
	'!='           reduce using rule 57
	'%'            reduce using rule 57
	'&&'           reduce using rule 57
	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	','            reduce using rule 57
	'-'            reduce using rule 57
	'.'            reduce using rule 57
	'/'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'['            reduce using rule 57
	']'            reduce using rule 57
	'boolean'      reduce using rule 57
	'else'         reduce using rule 57
	'false'        reduce using rule 57
	'for'          reduce using rule 57
	'if'           reduce using rule 57
	'int'          reduce using rule 57
	'new'          reduce using rule 57
	'return'       reduce using rule 57
	'string'       reduce using rule 57
	'true'         reduce using rule 57
	'void'         reduce using rule 57
	'while'        reduce using rule 57
	'{'            reduce using rule 57
	'||'           reduce using rule 57
	'}'            reduce using rule 57
	L_Ident        reduce using rule 57
	L_integ        reduce using rule 57
	L_quoted       reduce using rule 57


State 164

	Stmt -> 'for' '(' Type Ident ':' . Expr ')' Stmt    (rule 41)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	'false'        shift, and enter state 62
	'new'          shift, and enter state 65
	'true'         shift, and enter state 67
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 76
	Integer        goto state 45
	String         goto state 46
	Expr6          goto state 77
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 169

State 165

	Stmt -> 'if' '(' Expr ')' Stmt .                    (rule 38)
	Stmt -> 'if' '(' Expr ')' Stmt . 'else' Stmt        (rule 39)

	'!'            reduce using rule 38
	'('            reduce using rule 38
	'-'            reduce using rule 38
	';'            reduce using rule 38
	'boolean'      reduce using rule 38
	'else'         shift, and enter state 168
			(reduce using rule 38)

	'false'        reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'int'          reduce using rule 38
	'new'          reduce using rule 38
	'return'       reduce using rule 38
	'string'       reduce using rule 38
	'true'         reduce using rule 38
	'void'         reduce using rule 38
	'while'        reduce using rule 38
	'{'            reduce using rule 38
	'}'            reduce using rule 38
	L_Ident        reduce using rule 38
	L_integ        reduce using rule 38
	L_quoted       reduce using rule 38


State 166

	Expr6 -> 'new' Type '[' Expr ']' .                  (rule 66)

	'!'            reduce using rule 66
	'!='           reduce using rule 66
	'%'            reduce using rule 66
	'&&'           reduce using rule 66
	'('            reduce using rule 66
	')'            reduce using rule 66
	'*'            reduce using rule 66
	'+'            reduce using rule 66
	','            reduce using rule 66
	'-'            reduce using rule 66
	'.'            reduce using rule 66
	'/'            reduce using rule 66
	';'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'['            reduce using rule 66
	']'            reduce using rule 66
	'boolean'      reduce using rule 66
	'else'         reduce using rule 66
	'false'        reduce using rule 66
	'for'          reduce using rule 66
	'if'           reduce using rule 66
	'int'          reduce using rule 66
	'new'          reduce using rule 66
	'return'       reduce using rule 66
	'string'       reduce using rule 66
	'true'         reduce using rule 66
	'void'         reduce using rule 66
	'while'        reduce using rule 66
	'{'            reduce using rule 66
	'||'           reduce using rule 66
	'}'            reduce using rule 66
	L_Ident        reduce using rule 66
	L_integ        reduce using rule 66
	L_quoted       reduce using rule 66


State 167

	Stmt -> 'while' '(' Expr ')' Stmt .                 (rule 40)

	'!'            reduce using rule 40
	'('            reduce using rule 40
	'-'            reduce using rule 40
	';'            reduce using rule 40
	'boolean'      reduce using rule 40
	'else'         reduce using rule 40
	'false'        reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'int'          reduce using rule 40
	'new'          reduce using rule 40
	'return'       reduce using rule 40
	'string'       reduce using rule 40
	'true'         reduce using rule 40
	'void'         reduce using rule 40
	'while'        reduce using rule 40
	'{'            reduce using rule 40
	'}'            reduce using rule 40
	L_Ident        reduce using rule 40
	L_integ        reduce using rule 40
	L_quoted       reduce using rule 40


State 168

	Stmt -> 'if' '(' Expr ')' Stmt 'else' . Stmt        (rule 39)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 174
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 169

	Stmt -> 'for' '(' Type Ident ':' Expr . ')' Stmt    (rule 41)

	')'            shift, and enter state 173


State 170

	Expr6 -> Expr6 '.' Ident '(' ListExpr ')' .         (rule 62)

	'!'            reduce using rule 62
	'!='           reduce using rule 62
	'%'            reduce using rule 62
	'&&'           reduce using rule 62
	'('            reduce using rule 62
	')'            reduce using rule 62
	'*'            reduce using rule 62
	'+'            reduce using rule 62
	','            reduce using rule 62
	'-'            reduce using rule 62
	'.'            reduce using rule 62
	'/'            reduce using rule 62
	';'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'['            reduce using rule 62
	']'            reduce using rule 62
	'boolean'      reduce using rule 62
	'else'         reduce using rule 62
	'false'        reduce using rule 62
	'for'          reduce using rule 62
	'if'           reduce using rule 62
	'int'          reduce using rule 62
	'new'          reduce using rule 62
	'return'       reduce using rule 62
	'string'       reduce using rule 62
	'true'         reduce using rule 62
	'void'         reduce using rule 62
	'while'        reduce using rule 62
	'{'            reduce using rule 62
	'||'           reduce using rule 62
	'}'            reduce using rule 62
	L_Ident        reduce using rule 62
	L_integ        reduce using rule 62
	L_quoted       reduce using rule 62


State 171

	Stmt -> Expr6 '[' Expr ']' '=' Expr . ';'           (rule 30)

	';'            shift, and enter state 172


State 172

	Stmt -> Expr6 '[' Expr ']' '=' Expr ';' .           (rule 30)

	'!'            reduce using rule 30
	'('            reduce using rule 30
	'-'            reduce using rule 30
	';'            reduce using rule 30
	'boolean'      reduce using rule 30
	'else'         reduce using rule 30
	'false'        reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'int'          reduce using rule 30
	'new'          reduce using rule 30
	'return'       reduce using rule 30
	'string'       reduce using rule 30
	'true'         reduce using rule 30
	'void'         reduce using rule 30
	'while'        reduce using rule 30
	'{'            reduce using rule 30
	'}'            reduce using rule 30
	L_Ident        reduce using rule 30
	L_integ        reduce using rule 30
	L_quoted       reduce using rule 30


State 173

	Stmt -> 'for' '(' Type Ident ':' Expr ')' . Stmt    (rule 41)

	'!'            shift, and enter state 58
	'('            shift, and enter state 59
	'-'            shift, and enter state 60
	';'            shift, and enter state 61
	'boolean'      shift, and enter state 8
	'false'        shift, and enter state 62
	'for'          shift, and enter state 63
	'if'           shift, and enter state 64
	'int'          shift, and enter state 10
	'new'          shift, and enter state 65
	'return'       shift, and enter state 66
	'string'       shift, and enter state 11
	'true'         shift, and enter state 67
	'void'         shift, and enter state 12
	'while'        shift, and enter state 68
	'{'            shift, and enter state 43
	L_Ident        shift, and enter state 2
	L_integ        shift, and enter state 69
	L_quoted       shift, and enter state 70

	Ident          goto state 44
	Integer        goto state 45
	String         goto state 46
	Block          goto state 47
	Stmt           goto state 175
	Type           goto state 50
	Expr6          goto state 51
	Expr5          goto state 52
	Expr4          goto state 53
	Expr3          goto state 54
	Expr2          goto state 55
	Expr1          goto state 56
	Expr           goto state 57

State 174

	Stmt -> 'if' '(' Expr ')' Stmt 'else' Stmt .        (rule 39)

	'!'            reduce using rule 39
	'('            reduce using rule 39
	'-'            reduce using rule 39
	';'            reduce using rule 39
	'boolean'      reduce using rule 39
	'else'         reduce using rule 39
	'false'        reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'int'          reduce using rule 39
	'new'          reduce using rule 39
	'return'       reduce using rule 39
	'string'       reduce using rule 39
	'true'         reduce using rule 39
	'void'         reduce using rule 39
	'while'        reduce using rule 39
	'{'            reduce using rule 39
	'}'            reduce using rule 39
	L_Ident        reduce using rule 39
	L_integ        reduce using rule 39
	L_quoted       reduce using rule 39


State 175

	Stmt -> 'for' '(' Type Ident ':' Expr ')' Stmt .    (rule 41)

	'!'            reduce using rule 41
	'('            reduce using rule 41
	'-'            reduce using rule 41
	';'            reduce using rule 41
	'boolean'      reduce using rule 41
	'else'         reduce using rule 41
	'false'        reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'int'          reduce using rule 41
	'new'          reduce using rule 41
	'return'       reduce using rule 41
	'string'       reduce using rule 41
	'true'         reduce using rule 41
	'void'         reduce using rule 41
	'while'        reduce using rule 41
	'{'            reduce using rule 41
	'}'            reduce using rule 41
	L_Ident        reduce using rule 41
	L_integ        reduce using rule 41
	L_quoted       reduce using rule 41


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 96
Number of terminals: 46
Number of non-terminals: 32
Number of states: 176
